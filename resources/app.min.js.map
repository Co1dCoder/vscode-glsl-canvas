{"version":3,"sources":["resources/app.js"],"names":["onGlslError","message","options","window","errors","warnings","error","replace","m","l","v","t","li","encodeURI","JSON","stringify","uri","Number","push","output","join","document","querySelector","setAttribute","innerHTML","addEventListener","stats","statsdom","content","canvas","buttons","pause","record","create","flags","toggle","resize","glsl","GlslCanvas","premultipliedAlpha","preserveDrawingBuffer","backgroundColor","on","ri","service","CaptureService","load","o","u","vertex","trim","length","fragment","uniforms","setUniform","textures","init","w","offsetWidth","h","offsetHeight","style","width","height","togglePause","paused","timePause","timePrev","Date","timeLoad","play","set","snapshotRender","forceRender","render","stop","then","video","url","URL","createObjectURL","blob","link","createElement","href","download","extension","click","setTimeout","revokeObjectURL","visibility","Stats","showPanel","dom","cssText","body","appendChild","requestAnimationFrame","statsTick","update","e","parent","postMessage","command","data","event","parse","clearTimeout"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global window, document, console, GlslCanvas */\n\n(function () {\n    'use strict';\n\n    function onLoad() {\n        var stats, statsdom;\n\n        var content = document.querySelector('.content');\n        var canvas = document.querySelector('.shader');\n        var buttons = {\n            pause: document.querySelector('.btn-pause'),\n            record: document.querySelector('.btn-record'),\n            stats: document.querySelector('.btn-stats'),\n            create: document.querySelector('.btn-create'),\n        };\n        var flags = {\n            toggle: false,\n            record: false,\n            stats: false,\n        };\n\n        resize(true);\n\n        var glsl = new GlslCanvas(canvas, {\n            premultipliedAlpha: false,\n            preserveDrawingBuffer: true,\n            backgroundColor: 'rgba(1,1,1,1)'\n        });\n        glsl.on('error', onGlslError);\n\n        var service = new CaptureService();\n        service.set(canvas);\n\n        glsl.on('render', function () {\n            service.snapshotRender();\n        });\n\n        load();\n\n        function load() {\n            document.querySelector('.errors').setAttribute('class', 'errors');\n            document.querySelector('.welcome').setAttribute('class', (options.uri ? 'welcome' : 'welcome active'));\n            var o = window.options;\n            o.vertex = o.vertex.trim().length > 0 ? o.vertex : null;\n            o.fragment = o.fragment.trim().length > 0 ? o.fragment : null;\n            glsl.load(o.fragment, o.vertex);\n            for (var u in o.uniforms) {\n                glsl.setUniform(u, o.uniforms[u]);\n            }\n            for (var t in o.textures) {\n                glsl.setUniform('u_texture_' + t, o.textures[t]);\n            }\n            document.querySelector('body').setAttribute('class', (o.fragment || o.vertex ? 'ready' : 'empty'));\n        }\n\n        function resize(init) {\n            var w = content.offsetWidth;\n            var h = content.offsetHeight;\n            canvas.style.width = w + 'px';\n            canvas.style.height = h + 'px';\n            if (init) {\n                canvas.width = w;\n                canvas.height = h;\n            } else {\n                glsl.resize();\n            }\n        }\n\n        function snapshot() {\n            glsl.forceRender = true;\n            glsl.render();\n            return service.snapshot();\n        }\n\n        function record() {\n            glsl.forceRender = true;\n            glsl.render();\n            if (service.record()) {\n                // flags.record = true;\n            }\n        }\n\n        function stop() {\n            service.stop().then(function (video) {\n                // console.log('service.stop');\n                // var filename = options.uri.path.split('/').pop().replace('.glsl', '');\n                // console.log('filename', filename);\n                var url = URL.createObjectURL(video.blob);\n                var link = document.createElement('a');\n                link.href = url;\n                link.download = 'shader' + video.extension;\n                link.click();\n                setTimeout(function () {\n                    window.URL.revokeObjectURL(output);\n                }, 100);\n            });\n        }\n\n        function togglePause() {\n            flags.pause = !flags.pause;\n            // console.log('pause', flags.pause);\n            if (glsl.paused) {\n                if (glsl.timePause) {\n                    glsl.timePrev = new Date();\n                    glsl.timeLoad += (glsl.timePrev - glsl.timePause);\n                }\n                glsl.play();\n                buttons.pause.querySelector('i').setAttribute('class', 'icon-pause');\n            } else {\n                glsl.pause();\n                glsl.timePause = new Date();\n                buttons.pause.querySelector('i').setAttribute('class', 'icon-play');\n            }\n        }\n\n        function toggleRecord() {\n            flags.record = !flags.record;\n            // console.log('record', flags.record);\n            if (flags.record) {\n                buttons.record.setAttribute('class', 'btn btn-record active');\n                buttons.record.querySelector('i').setAttribute('class', 'icon-stop');\n                record();\n            } else {\n                buttons.record.setAttribute('class', 'btn btn-record');\n                buttons.record.querySelector('i').setAttribute('class', 'icon-record');\n                stop();\n            }\n        }\n\n        function toggleStats() {\n            flags.stats = !flags.stats;\n\n            function statsTick() {\n                stats.update();\n                if (flags.stats) {\n                    requestAnimationFrame(statsTick);\n                }\n            }\n            if (flags.stats) {\n                if (!statsdom) {\n                    stats = new Stats();\n                    stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n                    statsdom = stats.dom;\n                    statsdom.style.cssText = 'position:fixed;top:0;right:0;cursor:pointer;opacity:0.9;z-index:10000';\n                    document.body.appendChild(stats.dom);\n                } else {\n                    statsdom.style.visibility = 'visible';\n                }\n                requestAnimationFrame(statsTick);\n                buttons.stats.setAttribute('class', 'btn btn-stats active');\n            } else {\n                if (statsdom) {\n                    statsdom.style.visibility = 'hidden';\n                }\n                buttons.stats.setAttribute('class', 'btn btn-stats');\n            }\n        }\n\n        function createShader(e) {\n            // console.log('createShader', e);\n            window.parent.postMessage({\n                command: \"did-click-link\",\n                data: 'command:glsl-canvas.createShader?' + JSON.stringify([options.uri]),\n            }, \"file://\");\n        }\n\n        function onMessage(event) {\n            window.options = JSON.parse(event.data);\n            // console.log('onMessage', window.options);\n            // event.source.postMessage('message', event.origin);\n            load();\n        }\n\n        var ri;\n\n        function onResize() {\n            if (ri) {\n                clearTimeout(ri);\n            }\n            ri = setTimeout(resize, 50);\n        }\n\n        document.addEventListener(\"dblclick\", togglePause);\n        buttons.pause.addEventListener('mousedown', togglePause);\n        buttons.record.addEventListener('mousedown', toggleRecord);\n        buttons.stats.addEventListener('mousedown', toggleStats);\n        buttons.create.addEventListener('click', createShader);\n        window.addEventListener(\"message\", onMessage, false);\n        window.addEventListener('resize', onResize);\n        resize();\n    }\n\n    function onGlslError(message) {\n        // console.log('onGlslError.error', message.error);\n        var options = window.options;\n        var errors = [],\n            warnings = [];\n        message.error.replace(/ERROR: \\d+:(\\d+): \\'(.+)\\' : (.+)/g, function (m, l, v, t) {\n            var message = 'ERROR (' + v + ') ' + t;\n            var li = '<li><a class=\"error\" unselectable href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">ERROR line ' + Number(l) + '</span> <span class=\"value\" title=\"' + v + '\">' + v + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            errors.push(li);\n            return li;\n        });\n        message.error.replace(/WARNING: \\d+:(\\d+): \\'(.*\\n*|.*|\\n*)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"warning\" unselectable href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">WARN line ' + Number(l) + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            warnings.push(li);\n            return li;\n        });\n        var output = '<div class=\"errors-content\"><p>glslCanvas error</p><ul>';\n        output += errors.join('\\n');\n        output += warnings.join('\\n');\n        output += '</ul></div>';\n        document.querySelector('.errors').setAttribute('class', 'errors active');\n        document.querySelector('.errors').innerHTML = output;\n        /*\n        if (errors.length) {\n            // document.querySelectorAll('.error')[0].click();\n            var data = document.querySelectorAll('.error')[0].getAttribute('href').split('revealGlslLine').join('showDiagnostic');\n            window.parent.postMessage({\n                command: \"did-click-link\",\n                data: data,\n            }, \"file://\");\n        }\n        */\n    }\n    window.addEventListener('load', onLoad);\n}());"]}