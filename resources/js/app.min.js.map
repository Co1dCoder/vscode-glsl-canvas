{"version":3,"sources":["resources/js/app.js"],"names":["CaptureService","set","canvas","this","record","service","window","MediaRecorder","captureStream","console","log","capture","chunks","stream","options","mimeType","recorder","ondataavailable","e","data","size","push","resolve","blob","Blob","type","getTracks","forEach","track","stop","removeTrack","extension","start","promise","Promise","reject","snapshot","queue","snapshotRender","url","toDataURL","bytes","atob","slice","buffer","Uint8Array","length","i","charCodeAt","prototype","GuiService","callback","closed","hidden","pool","differs","a","b","JSON","stringify","copy","obj","parse","merge","_merge","key","hasOwnProperty","Object","keys","tuple","array","tuples","2","3","4","r","filter","v","enumerate","prefix","parsed","p","Array","isArray","undefined","unparse","unparsed","loop","params","value","add","onChange","folder","addFolder","randomize","_randomize","__controllers","c","initialValue","__min","__max","Math","random","property","updateDisplay","f","__folders","load","gui","locals","changed","destroy","dat","GUI","hide","show","_callback","domElement","style","display","getUniforms","onLoad","document","querySelector","setAttribute","uri","o","vertex","trim","fragment","glsl","guiservice","uniforms","t","textures","setUniform","resize","init","w","content","offsetWidth","h","offsetHeight","width","height","forceRender","render","then","video","URL","createObjectURL","link","createElement","href","download","click","setTimeout","revokeObjectURL","output","togglePause","flags","pause","paused","timePause","timePrev","Date","timeLoad","play","buttons","toggleRecord","toggleStats","statsTick","stats","update","requestAnimationFrame","statsdom","visibility","Stats","showPanel","dom","body","appendChild","createShader","parent","postMessage","command","onMessage","event","onResize","ri","clearTimeout","create","toggle","GlslCanvas","premultipliedAlpha","preserveDrawingBuffer","backgroundColor","on","onGlslError","u","addEventListener","message","errors","warnings","error","replace","m","l","li","encodeURI","Number","join","innerHTML"],"mappings":"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","file":"resources/js/app.min.js","sourcesContent":["/* global window, document, console, GlslCanvas */\n/* \nAuthor: Brett Camper (@professorlemeza)\nURL: https://github.com/tangrams/tangram/blob/master/src/utils/media_capture.js\n*/\n\n(function () {\n    'use strict';\n\n    function CaptureService() {}\n\n    CaptureService.prototype = {\n        set: set,\n        snapshot: snapshot,\n        snapshotRender: snapshotRender,\n        record: record,\n        stop: stop,\n    };\n\n    function set(canvas) {\n        var service = this;\n        service.canvas = canvas;\n    }\n\n    /*\n    var mimeTypes = [\n        'video/webm\\;codecs=h264',\n        'video/webm\\;codecs=vp8',\n        'video/webm\\;codecs=daala',\n        'video/webm',\n        'audio/webm\\;codecs=opus',\n        'audio/webm',\n        'video/mpeg',\n    ];\n    var options = {\n        videoBitsPerSecond: 2500000,\n        audioBitsPerSecond: 128000,\n        mimeType: 'video/webm',\n        extension: '.webm',\n    };\n    // MediaRecorder.isTypeSupported(mimeTypes[0])\n    */\n\n    function record() {\n        var service = this;\n        if (typeof window.MediaRecorder !== 'function' || !service.canvas || typeof service.canvas.captureStream !== 'function') {\n            console.log('warn: Video capture (Canvas.captureStream and/or MediaRecorder APIs) not supported by browser');\n            return false;\n        } else if (service.capture) {\n            console.log('warn: Video capture already in progress, call Scene.stopVideoCapture() first');\n            return false;\n        }\n        try {\n            var capture = {};\n            var chunks = [];\n            var stream = service.canvas.captureStream();\n            var options = {\n                mimeType: 'video/webm', // 'video/webm\\;codecs=h264'\n            };\n            var recorder = new MediaRecorder(stream, options);\n            recorder.ondataavailable = function (e) {\n                if (e.data.size > 0) {\n                    chunks.push(e.data);\n                }\n                // Stopped recording? Create the final capture file blob\n                if (capture.resolve) {\n                    var blob = new Blob(chunks, {\n                        type: options.mimeType,\n                    });\n                    if (stream) {\n                        var tracks = stream.getTracks() || [];\n                        tracks.forEach(function (track) {\n                            track.stop();\n                            stream.removeTrack(track);\n                        });\n                    }\n                    stream = null;\n                    service.recorder = null;\n                    service.capture = null;\n                    capture.resolve({\n                        blob: blob,\n                        extension: '.webm',\n                    });\n                }\n            };\n            service.capture = capture;\n            service.recorder = recorder;\n            recorder.start();\n        } catch (e) {\n            service.capture = null;\n            service.recorder = null;\n            console.log('error: Scene video capture failed', e);\n            return false;\n        }\n        return true;\n    }\n\n    function stop() {\n        var service = this;\n        if (!service.capture) {\n            console.log('warn: No scene video capture in progress, call Scene.startVideoCapture() first');\n            return Promise.resolve({});\n        }\n        service.capture.promise = new Promise(function (resolve, reject) {\n            service.capture.resolve = resolve;\n            service.capture.reject = reject;\n        });\n        service.recorder.stop();\n        return service.capture.promise;\n    }\n\n    function snapshot() {\n        var service = this;\n        if (service.queue) {\n            return service.queue.promise;\n        }\n        service.queue = {};\n        service.queue.promise = new Promise(function (resolve, reject) {\n            service.queue.resolve = resolve;\n            service.queue.reject = reject;\n        });\n        return service.queue.promise;\n    }\n\n    function snapshotRender() {\n        var service = this;\n        if (service.queue) {\n            // Get data URL, convert to blob\n            // Strip host/mimetype/etc., convert base64 to binary without UTF-8 mangling\n            // Adapted from: https://gist.github.com/unconed/4370822\n            var url = service.canvas.toDataURL('image/png');\n            var bytes = atob(url.slice(22));\n            var buffer = new Uint8Array(bytes.length);\n            for (var i = 0; i < bytes.length; ++i) {\n                buffer[i] = bytes.charCodeAt(i);\n            }\n            var blob = new Blob([buffer], {\n                type: 'image/png',\n            });\n            service.queue.resolve({\n                blob: blob,\n                extension: '.png',\n            });\n            service.queue = null;\n        }\n    }\n\n    window.CaptureService = CaptureService;\n}());\n/* global window, document, console */\n\n(function () {\n    'use strict';\n\n    function GuiService(callback) {\n        this.closed = true;\n        this.hidden = true;\n        this.callback = callback || function () {\n            console.log('GuiService.onChange');\n        };\n        this.pool = {};\n    }\n\n    GuiService.prototype = {\n        load: load,\n        hide: hide,\n        show: show,\n        getUniforms: getUniforms,\n    };\n\n    // statics\n\n    function differs(a, b) {\n        // console.log('differs', JSON.stringify(a), JSON.stringify(b));\n        return JSON.stringify(a) !== JSON.stringify(b);\n    }\n\n    function copy(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n\n    function merge(a, b) {\n        function _merge(a, b) {\n            for (var key in a) {\n                if (b.hasOwnProperty(key)) {\n                    if (typeof a[key] === 'number') {\n                        a[key] = b[key];\n                    } else if (typeof a[key] == 'object' && Object.keys(a[key]).length > 0) {\n                        _merge(a[key], b[key]);\n                    }\n                }\n            }\n        }\n        if (a) {\n            a = copy(a);\n\n            _merge(a, b);\n        }\n        return a;\n    }\n\n    function tuple(array) {\n        var tuples = {\n            2: ['x', 'y'],\n            3: ['x', 'y', 'z'],\n            4: ['r', 'g', 'b', 'a']\n        };\n        var keys = tuples[array.length];\n        var r = {};\n        array.filter(function (v, i) {\n            r[keys[i]] = v;\n        });\n        return r;\n    }\n\n    function enumerate(array, prefix) {\n        var r = {};\n        array.filter(function (v, i) {\n            r[prefix + i] = v;\n        });\n        return r;\n    }\n\n    function parse(obj) {\n        var parsed = {};\n        for (var p in obj) {\n            var v = obj[p];\n            if (Array.isArray(v)) {\n                if (v.length > 1) {\n                    switch (typeof v[0]) {\n                        case 'number':\n                            if (v.length < 5) {\n                                parsed[p] = tuple(v);\n                            }\n                            break;\n                        case 'boolean':\n                            parsed[p] = enumerate(v, 'bool_');\n                            break;\n                        case 'string':\n                            parsed[p] = enumerate(v, 'texture_');\n                            break;\n                        case 'object':\n                            parsed[p] = enumerate(v, 'struct_');\n                            break;\n                    }\n                } else if (v.length) {\n                    parsed[p] = v[0];\n                }\n            } else if (v !== undefined && v !== null) {\n                parsed[p] = v;\n            }\n        }\n        return parsed;\n    }\n\n    function unparse(obj) {\n        var unparsed = {};\n        for (var p in obj) {\n            var v = obj[p];\n            parsed[p] = v;\n        }\n        /*\n        float                                   <--- typeof U === 'number'\n        bool                                    <--- typeof U === 'boolean'\n        sampler2D                               <--- typeof U === 'string'\n        Structure                               <--- typeof U === 'object'\n        ARRAYS of                               <--- Array.isArray(U)\n            number                              <--- typeof U[0] === 'number'\n                float                           <--- U.length === 1\n                vec2, vec3, vec4                <--- U.length > 1 && U.length < 5\n                float[]                         <--- U.length > 4\n            sampler2D[]                         <--- typeof U[0] === 'string'\n            vec2[], vec3[], vec4[]              <--- Array.isArray(U[0]) && typeof U[0][0] === 'number'\n            Structure[]                         <--- typeof U[0] === 'object'\n        \n            TODO: assume matrix for (typeof == Float32Array && length == 16)\n        TODO: support other non-float types? (int, etc.)\n        */\n        return unparsed;\n    }\n\n    function loop(obj, params, callback) {\n        var keys = [],\n            p;\n        for (p in params) {\n            keys.push(p);\n        }\n        keys.filter(function (key) {\n            var value = params[key];\n            if (typeof value === 'number') {\n                p = obj.add(params, key, 0.0, 1.0);\n                p.onChange(callback);\n            } else if (typeof value === 'object' && Object.keys(value).length > 0) {\n                p = null;\n                var folder = obj.addFolder(key);\n                loop(folder, value, callback);\n            } else {\n                p = obj.add(params, key);\n                p.onChange(callback);\n            }\n        });\n    }\n\n    function randomize(obj, params, callback) {\n\n        function _randomize(obj, params) {\n            obj.__controllers.filter(function (c) {\n                if (typeof c.initialValue === 'number' && typeof c.__min === 'number' && typeof c.__max === 'number') {\n                    var value = c.__min + (c.__max - c.__min) * Math.random();\n                    params[c.property] = value;\n                    c.updateDisplay();\n                }\n            });\n            for (var f in obj.__folders) {\n                _randomize(obj.__folders[f], params[f]);\n            }\n        }\n        _randomize(obj, params);\n        callback();\n    }\n\n    // publics\n\n    function load(params) {\n        var service = this;\n        var gui = service.gui;\n        var locals = service.locals;\n        var changed = differs(params, locals);\n        if (gui && changed) {\n            service.closed = gui.closed;\n            gui.destroy();\n            gui = null;\n        }\n        if (!gui) {\n            gui = new dat.GUI();\n            gui.closed = service.closed;\n            service.gui = gui;\n            if (service.hidden) {\n                service.hide();\n            } else {\n                service.show();\n            }\n        }\n        if (changed) {\n            locals = copy(params);\n            service.locals = locals;\n            var parsed = parse(params);\n            var pool = merge(parsed, service.pool);\n            service.pool = pool;\n            var _callback = function () {\n                service.callback(pool);\n            };\n            loop(gui, pool, _callback);\n            pool.randomize = function () {\n                randomize(gui, pool, _callback);\n            };\n            gui.add(pool, 'randomize');\n            _callback();\n        }\n    }\n\n    function hide() {\n        var service = this;\n        var gui = service.gui;\n        gui.domElement.style.display = 'none';\n        service.hidden = true;\n        // dat.GUI.toggleHide();\n    }\n\n    function show() {\n        var service = this;\n        var locals = service.locals;\n        if (Object.keys(locals).length) {\n            var gui = service.gui;\n            gui.domElement.style.display = '';\n        }\n        service.hidden = false;\n    }\n\n    function getUniforms() {\n        var service = this;\n        var pool = service.pool;\n        return unparse(pool);\n    }\n\n    window.GuiService = GuiService;\n\n}());\n/* global window, document, console, GlslCanvas, CaptureService, Stats, dat */\n\n(function () {\n    'use strict';\n\n    function onLoad() {\n        var stats, statsdom;\n\n        var content = document.querySelector('.content');\n        var canvas = document.querySelector('.shader');\n        var buttons = {\n            pause: document.querySelector('.btn-pause'),\n            record: document.querySelector('.btn-record'),\n            stats: document.querySelector('.btn-stats'),\n            create: document.querySelector('.btn-create'),\n        };\n        var flags = {\n            toggle: false,\n            record: false,\n            stats: false,\n        };\n\n        resize(true);\n\n        var glsl = new GlslCanvas(canvas, {\n            premultipliedAlpha: false,\n            preserveDrawingBuffer: true,\n            backgroundColor: 'rgba(1,1,1,1)',\n        });\n        glsl.on('error', onGlslError);\n\n        var service = new CaptureService();\n        service.set(canvas);\n\n        glsl.on('render', function () {\n            service.snapshotRender();\n        });\n\n        var guiservice = new GuiService(function (params) {\n            // console.log('GuiService.onUpdate');\n            var uniforms = guiservice.getUniforms();\n            for (var u in uniforms) {\n                // console.log(u, uniforms[u]);\n                glsl.setUniform(u, uniforms[u]);\n            }\n        });\n\n        load();\n\n        function load() {\n            document.querySelector('.errors').setAttribute('class', 'errors');\n            document.querySelector('.welcome').setAttribute('class', (options.uri ? 'welcome' : 'welcome active'));\n            var o = window.options;\n            o.vertex = o.vertex.trim().length > 0 ? o.vertex : null;\n            o.fragment = o.fragment.trim().length > 0 ? o.fragment : null;\n            glsl.load(o.fragment, o.vertex);\n            guiservice.load(o.uniforms);\n            for (var t in o.textures) {\n                glsl.setUniform('u_texture_' + t, o.textures[t]);\n            }\n            document.querySelector('body').setAttribute('class', (o.fragment || o.vertex ? 'ready' : 'empty'));\n        }\n\n        function resize(init) {\n            var w = content.offsetWidth;\n            var h = content.offsetHeight;\n            canvas.style.width = w + 'px';\n            canvas.style.height = h + 'px';\n            if (init) {\n                canvas.width = w;\n                canvas.height = h;\n            } else {\n                glsl.resize();\n            }\n        }\n\n        function snapshot() {\n            glsl.forceRender = true;\n            glsl.render();\n            return service.snapshot();\n        }\n\n        function record() {\n            glsl.forceRender = true;\n            glsl.render();\n            if (service.record()) {\n                // flags.record = true;\n            }\n        }\n\n        function stop() {\n            service.stop().then(function (video) {\n                // console.log('service.stop');\n                // var filename = options.uri.path.split('/').pop().replace('.glsl', '');\n                // console.log('filename', filename);\n                var url = URL.createObjectURL(video.blob);\n                var link = document.createElement('a');\n                link.href = url;\n                link.download = 'shader' + video.extension;\n                link.click();\n                setTimeout(function () {\n                    window.URL.revokeObjectURL(output);\n                }, 100);\n            });\n        }\n\n        function togglePause() {\n            flags.pause = !flags.pause;\n            // console.log('pause', flags.pause);\n            if (glsl.paused) {\n                if (glsl.timePause) {\n                    glsl.timePrev = new Date();\n                    glsl.timeLoad += (glsl.timePrev - glsl.timePause);\n                }\n                glsl.play();\n                buttons.pause.querySelector('i').setAttribute('class', 'icon-pause');\n            } else {\n                glsl.pause();\n                glsl.timePause = new Date();\n                buttons.pause.querySelector('i').setAttribute('class', 'icon-play');\n            }\n        }\n\n        function toggleRecord() {\n            flags.record = !flags.record;\n            // console.log('record', flags.record);\n            if (flags.record) {\n                buttons.record.setAttribute('class', 'btn btn-record active');\n                buttons.record.querySelector('i').setAttribute('class', 'icon-stop');\n                record();\n            } else {\n                buttons.record.setAttribute('class', 'btn btn-record');\n                buttons.record.querySelector('i').setAttribute('class', 'icon-record');\n                stop();\n            }\n        }\n\n        function toggleStats() {\n            flags.stats = !flags.stats;\n\n            function statsTick() {\n                stats.update();\n                if (flags.stats) {\n                    requestAnimationFrame(statsTick);\n                }\n            }\n            if (flags.stats) {\n                if (!statsdom) {\n                    stats = new Stats();\n                    stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n                    statsdom = stats.dom;\n                    // statsdom.style.cssText = 'position:fixed;top:0;right:0;cursor:pointer;opacity:0.9;z-index:10000';\n                    document.body.appendChild(stats.dom);\n                } else {\n                    statsdom.style.visibility = 'visible';\n                }\n                requestAnimationFrame(statsTick);\n                guiservice.show();\n                buttons.stats.setAttribute('class', 'btn btn-stats active');\n            } else {\n                if (statsdom) {\n                    statsdom.style.visibility = 'hidden';\n                }\n                guiservice.hide();\n                buttons.stats.setAttribute('class', 'btn btn-stats');\n            }\n        }\n\n        function createShader(e) {\n            // console.log('createShader', e);\n            window.parent.postMessage({\n                command: \"did-click-link\",\n                data: 'command:glsl-canvas.createShader?' + JSON.stringify([options.uri]),\n            }, \"file://\");\n        }\n\n        function onMessage(event) {\n            window.options = JSON.parse(event.data);\n            // console.log('onMessage', window.options);\n            // event.source.postMessage('message', event.origin);\n            load();\n        }\n\n        var ri;\n\n        function onResize() {\n            if (ri) {\n                clearTimeout(ri);\n            }\n            ri = setTimeout(resize, 50);\n        }\n\n        canvas.addEventListener(\"dblclick\", togglePause);\n        buttons.pause.addEventListener('mousedown', togglePause);\n        buttons.record.addEventListener('mousedown', toggleRecord);\n        buttons.stats.addEventListener('mousedown', toggleStats);\n        buttons.create.addEventListener('click', createShader);\n        window.addEventListener(\"message\", onMessage, false);\n        window.addEventListener('resize', onResize);\n        resize();\n    }\n\n    function onGlslError(message) {\n        // console.log('onGlslError.error', message.error);\n        var options = window.options;\n        var errors = [],\n            warnings = [];\n        message.error.replace(/ERROR: \\d+:(\\d+): \\'(.+)\\' : (.+)/g, function (m, l, v, t) {\n            var message = 'ERROR (' + v + ') ' + t;\n            var li = '<li><a class=\"error\" unselectable href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">ERROR line ' + Number(l) + '</span> <span class=\"value\" title=\"' + v + '\">' + v + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            errors.push(li);\n            return li;\n        });\n        message.error.replace(/WARNING: \\d+:(\\d+): \\'(.*\\n*|.*|\\n*)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"warning\" unselectable href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">WARN line ' + Number(l) + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            warnings.push(li);\n            return li;\n        });\n        var output = '<div class=\"errors-content\"><p>glslCanvas error</p><ul>';\n        output += errors.join('\\n');\n        output += warnings.join('\\n');\n        output += '</ul></div>';\n        document.querySelector('.errors').setAttribute('class', 'errors active');\n        document.querySelector('.errors').innerHTML = output;\n    }\n    window.addEventListener('load', onLoad);\n}());"],"sourceRoot":"/source/"}