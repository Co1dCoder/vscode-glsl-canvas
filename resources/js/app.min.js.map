{"version":3,"sources":["resources/js/app.js"],"names":["CaptureService","set","canvas","this","record","service","window","MediaRecorder","captureStream","console","log","capture","chunks","stream","options","mimeType","recorder","ondataavailable","e","data","size","push","resolve","blob","Blob","type","getTracks","forEach","track","stop","removeTrack","extension","start","promise","Promise","reject","snapshot","queue","snapshotRender","url","toDataURL","bytes","atob","slice","buffer","Uint8Array","length","i","charCodeAt","prototype","GuiService","callback","differs","a","b","JSON","stringify","copy","obj","parse","loop","params","p","keys","key","add","onChange","Object","folder","addFolder","load","gui","locals","changed","destroy","dat","GUI","closed","onLoad","document","querySelector","setAttribute","uri","o","vertex","trim","fragment","glsl","u","uniforms","setUniform","t","textures","resize","init","w","content","offsetWidth","h","offsetHeight","style","width","height","forceRender","render","then","video","URL","createObjectURL","link","createElement","href","download","click","setTimeout","revokeObjectURL","output","togglePause","flags","pause","paused","timePause","timePrev","Date","timeLoad","play","buttons","toggleRecord","toggleStats","statsTick","stats","update","requestAnimationFrame","statsdom","visibility","Stats","showPanel","dom","cssText","body","appendChild","createShader","parent","postMessage","command","onMessage","event","onResize","ri","clearTimeout","create","toggle","GlslCanvas","premultipliedAlpha","preserveDrawingBuffer","backgroundColor","on","onGlslError","addEventListener","message","errors","warnings","error","replace","m","l","v","li","encodeURI","Number","join","innerHTML"],"mappings":"CAMC,WACG,YAEA,SAASA,MAUT,QAASC,GAAIC,GACKC,KACND,OAASA,EAwBrB,QAASE,KACL,GAAIC,GAAUF,IACd,IAAoC,kBAAzBG,QAAOC,gBAAiCF,EAAQH,QAAkD,kBAAjCG,GAAQH,OAAOM,cAEvF,MADAC,SAAQC,IAAI,kGACL,CACJ,IAAIL,EAAQM,QAEf,MADAF,SAAQC,IAAI,iFACL,CAEX,KACI,GAAIC,MACAC,KACAC,EAASR,EAAQH,OAAOM,gBACxBM,GACAC,SAAU,0BAEVC,EAAW,GAAIT,eAAcM,EAAQC,EACzCE,GAASC,gBAAkB,SAAUC,GAKjC,GAJIA,EAAEC,KAAKC,KAAO,GACdR,EAAOS,KAAKH,EAAEC,MAGdR,EAAQW,QAAS,CACjB,GAAIC,GAAO,GAAIC,MAAKZ,GAChBa,KAAMX,EAAQC,UAElB,IAAIF,EAAQ,EACKA,EAAOa,iBACbC,QAAQ,SAAUC,GACrBA,EAAMC,OACNhB,EAAOiB,YAAYF,KAG3Bf,EAAS,KACTR,EAAQW,SAAW,KACnBX,EAAQM,QAAU,KAClBA,EAAQW,SACJC,KAAMA,EACNQ,UAAW,YAIvB1B,EAAQM,QAAUA,EAClBN,EAAQW,SAAWA,EACnBA,EAASgB,QACX,MAAOd,GAIL,MAHAb,GAAQM,QAAU,KAClBN,EAAQW,SAAW,KACnBP,QAAQC,IAAI,oCAAqCQ,IAC1C,EAEX,OAAO,EAGX,QAASW,KACL,GAAIxB,GAAUF,IACd,OAAKE,GAAQM,SAIbN,EAAQM,QAAQsB,QAAU,GAAIC,SAAQ,SAAUZ,EAASa,GACrD9B,EAAQM,QAAQW,QAAUA,EAC1BjB,EAAQM,QAAQwB,OAASA,IAE7B9B,EAAQW,SAASa,OACVxB,EAAQM,QAAQsB,UARnBxB,QAAQC,IAAI,kFACLwB,QAAQZ,aAUvB,QAASc,KACL,GAAI/B,GAAUF,IACd,OAAIE,GAAQgC,MACDhC,EAAQgC,MAAMJ,SAEzB5B,EAAQgC,SACRhC,EAAQgC,MAAMJ,QAAU,GAAIC,SAAQ,SAAUZ,EAASa,GACnD9B,EAAQgC,MAAMf,QAAUA,EACxBjB,EAAQgC,MAAMF,OAASA,IAEpB9B,EAAQgC,MAAMJ,SAGzB,QAASK,KACL,GAAIjC,GAAUF,IACd,IAAIE,EAAQgC,MAAO,CAOf,IAAK,GAHDE,GAAMlC,EAAQH,OAAOsC,UAAU,aAC/BC,EAAQC,KAAKH,EAAII,MAAM,KACvBC,EAAS,GAAIC,YAAWJ,EAAMK,QACzBC,EAAI,EAAGA,EAAIN,EAAMK,SAAUC,EAChCH,EAAOG,GAAKN,EAAMO,WAAWD,EAEjC,IAAIxB,GAAO,GAAIC,OAAMoB,IACjBnB,KAAM,aAEVpB,GAAQgC,MAAMf,SACVC,KAAMA,EACNQ,UAAW,SAEf1B,EAAQgC,MAAQ,MAtIxBrC,EAAeiD,WACXhD,IAAKA,EACLmC,SAAUA,EACVE,eAAgBA,EAChBlC,OAAQA,EACRyB,KAAMA,EAqIVvB,QAAON,eAAiBA,KAI3B,WACG,YAEA,SAASkD,GAAWC,GAChBhD,KAAKgD,SAAWA,GAAY,WACxB1C,QAAQC,IAAI,wBAUpB,QAAS0C,GAAQC,EAAGC,GAChB,MAAOC,MAAKC,UAAUH,KAAOE,KAAKC,UAAUF,GAGhD,QAASG,GAAKC,GACV,MAAOH,MAAKI,MAAMJ,KAAKC,UAAUE,IAGrC,QAASE,GAAKF,EAAKG,EAAQV,GACvB,GACIW,GADAC,IAEJ,KAAKD,IAAKD,GACNE,EAAK1C,KAAKyC,EAEd,KAAK,GAAIf,GAAI,EAAGA,EAAIgB,EAAKjB,OAAQC,IAAK,CAClC,GAAIiB,GAAMD,EAAKhB,EACf,IAA0B,gBAAfc,GAAOG,GACdF,EAAIJ,EAAIO,IAAIJ,EAAQG,EAAmB,GAAdH,EAAOG,GAA0B,EAAdH,EAAOG,IACnDF,EAAEI,SAASf,OACR,IAA0B,gBAAfU,GAAOG,IAAoBG,OAAOJ,KAAKF,EAAOG,IAAMlB,OAAS,EAAG,CAC9EgB,EAAI,IACJ,IAAIM,GAASV,EAAIW,UAAUL,EAC3BJ,GAAKQ,EAAQP,EAAOG,QAEpBF,GAAIJ,EAAIO,IAAIJ,EAAQG,GACpBF,EAAEI,SAASf,IAOvB,QAASmB,GAAKT,GACV,GAAIxD,GAAUF,KACVoE,EAAMlE,EAAQkE,IACdC,EAASnE,EAAQmE,OACjBC,EAAUrB,EAAQS,EAAQW,EAC1BD,IAAOnB,IACPmB,EAAIG,UACJH,EAAM,MAELA,IACDA,EAAM,GAAII,KAAIC,IACdL,EAAIM,QAAS,GAEbJ,IACAD,EAASf,EAAKI,GACdD,EAAKW,EAAKC,EAAQnE,EAAQ8C,WAE9B9C,EAAQkE,IAAMA,EACdlE,EAAQmE,OAASA,EAxDrBtB,EAAWD,WACPqB,KAAMA,GA0DVhE,OAAO4C,WAAaA,KAKvB,WACG,YAEA,SAAS4B,KAmCL,QAASR,KACLS,SAASC,cAAc,WAAWC,aAAa,QAAS,UACxDF,SAASC,cAAc,YAAYC,aAAa,QAAUnE,QAAQoE,IAAM,UAAY,iBACpF,IAAIC,GAAI7E,OAAOQ,OACfqE,GAAEC,OAASD,EAAEC,OAAOC,OAAOvC,OAAS,EAAIqC,EAAEC,OAAS,KACnDD,EAAEG,SAAWH,EAAEG,SAASD,OAAOvC,OAAS,EAAIqC,EAAEG,SAAW,KACzDC,EAAKjB,KAAKa,EAAEG,SAAUH,EAAEC,OACxB,KAAK,GAAII,KAAKL,GAAEM,SACZF,EAAKG,WAAWF,EAAGL,EAAEM,SAASD,GAElC,KAAK,GAAIG,KAAKR,GAAES,SACZL,EAAKG,WAAW,aAAeC,EAAGR,EAAES,SAASD,GAEjDZ,UAASC,cAAc,QAAQC,aAAa,QAAUE,EAAEG,UAAYH,EAAEC,OAAS,QAAU,SAG7F,QAASS,GAAOC,GACZ,GAAIC,GAAIC,EAAQC,YACZC,EAAIF,EAAQG,YAChBjG,GAAOkG,MAAMC,MAAQN,EAAI,KACzB7F,EAAOkG,MAAME,OAASJ,EAAI,KACtBJ,GACA5F,EAAOmG,MAAQN,EACf7F,EAAOoG,OAASJ,GAEhBX,EAAKM,SAUb,QAASzF,KACLmF,EAAKgB,aAAc,EACnBhB,EAAKiB,SACDnG,EAAQD,SAKhB,QAASyB,KACLxB,EAAQwB,OAAO4E,KAAK,SAAUC,GAI1B,GAAInE,GAAMoE,IAAIC,gBAAgBF,EAAMnF,MAChCsF,EAAO9B,SAAS+B,cAAc,IAClCD,GAAKE,KAAOxE,EACZsE,EAAKG,SAAW,SAAWN,EAAM3E,UACjC8E,EAAKI,QACLC,WAAW,WACP5G,OAAOqG,IAAIQ,gBAAgBC,SAC5B,OAIX,QAASC,KACLC,EAAMC,OAASD,EAAMC,MAEjBhC,EAAKiC,QACDjC,EAAKkC,YACLlC,EAAKmC,SAAW,GAAIC,MACpBpC,EAAKqC,UAAarC,EAAKmC,SAAWnC,EAAKkC,WAE3ClC,EAAKsC,OACLC,EAAQP,MAAMvC,cAAc,KAAKC,aAAa,QAAS,gBAEvDM,EAAKgC,QACLhC,EAAKkC,UAAY,GAAIE,MACrBG,EAAQP,MAAMvC,cAAc,KAAKC,aAAa,QAAS,cAI/D,QAAS8C,KACLT,EAAMlH,QAAUkH,EAAMlH,OAElBkH,EAAMlH,QACN0H,EAAQ1H,OAAO6E,aAAa,QAAS,yBACrC6C,EAAQ1H,OAAO4E,cAAc,KAAKC,aAAa,QAAS,aACxD7E,MAEA0H,EAAQ1H,OAAO6E,aAAa,QAAS,kBACrC6C,EAAQ1H,OAAO4E,cAAc,KAAKC,aAAa,QAAS,eACxDpD,KAIR,QAASmG,KAGL,QAASC,KACLC,EAAMC,SACFb,EAAMY,OACNE,sBAAsBH,GAL9BX,EAAMY,OAASZ,EAAMY,MAQjBZ,EAAMY,OACDG,EAODA,EAASjC,MAAMkC,WAAa,WAN5BJ,EAAQ,GAAIK,OACZL,EAAMM,UAAU,GAChBH,EAAWH,EAAMO,IACjBJ,EAASjC,MAAMsC,QAAU,wEACzB3D,SAAS4D,KAAKC,YAAYV,EAAMO,MAIpCL,sBAAsBH,GACtBH,EAAQI,MAAMjD,aAAa,QAAS,0BAEhCoD,IACAA,EAASjC,MAAMkC,WAAa,UAEhCR,EAAQI,MAAMjD,aAAa,QAAS,kBAI5C,QAAS4D,GAAa3H,GAElBZ,OAAOwI,OAAOC,aACVC,QAAS,iBACT7H,KAAM,oCAAsCoC,KAAKC,WAAW1C,QAAQoE,OACrE,WAGP,QAAS+D,GAAUC,GACf5I,OAAOQ,QAAUyC,KAAKI,MAAMuF,EAAM/H,MAGlCmD,IAKJ,QAAS6E,KACDC,GACAC,aAAaD,GAEjBA,EAAKlC,WAAWrB,EAAQ,IA9K5B,GAAIqC,GAAOG,EAEPrC,EAAUjB,SAASC,cAAc,YACjC9E,EAAS6E,SAASC,cAAc,WAChC8C,GACAP,MAAOxC,SAASC,cAAc,cAC9B5E,OAAQ2E,SAASC,cAAc,eAC/BkD,MAAOnD,SAASC,cAAc,cAC9BsE,OAAQvE,SAASC,cAAc,gBAE/BsC,GACAiC,QAAQ,EACRnJ,QAAQ,EACR8H,OAAO,EAGXrC,IAAO,EAEP,IAAIN,GAAO,GAAIiE,YAAWtJ,GACtBuJ,oBAAoB,EACpBC,uBAAuB,EACvBC,gBAAiB,iBAErBpE,GAAKqE,GAAG,QAASC,EAEjB,IAAIxJ,GAAU,GAAIL,eAClBK,GAAQJ,IAAIC,GAEZqF,EAAKqE,GAAG,SAAU,WACdvJ,EAAQiC,mBAGZgC,GAwIA,IAAI8E,EASJrE,UAAS+E,iBAAiB,WAAYzC,GACtCS,EAAQP,MAAMuC,iBAAiB,YAAazC,GAC5CS,EAAQ1H,OAAO0J,iBAAiB,YAAa/B,GAC7CD,EAAQI,MAAM4B,iBAAiB,YAAa9B,GAC5CF,EAAQwB,OAAOQ,iBAAiB,QAASjB,GACzCvI,OAAOwJ,iBAAiB,UAAWb,GAAW,GAC9C3I,OAAOwJ,iBAAiB,SAAUX,GAClCtD,IAGJ,QAASgE,GAAYE,GAEjB,GAAIjJ,GAAUR,OAAOQ,QACjBkJ,KACAC,IACJF,GAAQG,MAAMC,QAAQ,qCAAsC,SAAUC,EAAGC,EAAGC,EAAG3E,GAC3E,GAAIoE,GAAU,UAAYO,EAAI,KAAO3E,EACjC4E,EAAK,2CAA6CC,UAAU,sCAAwCjH,KAAKC,WAAW1C,EAAQoE,IAAKuF,OAAOJ,GAAIN,KAAa,mCAAqCU,OAAOJ,GAAK,sCAAwCC,EAAI,KAAOA,EAAI,qCAAuC3E,EAAI,KAAOA,EAAI,kBAE3T,OADAqE,GAAO3I,KAAKkJ,GACLA,IAEXR,EAAQG,MAAMC,QAAQ,iDAAkD,SAAUC,EAAGC,EAAGC,EAAG3E,GACvF,GAAI4E,GAAK,6CAA+CC,UAAU,sCAAwCjH,KAAKC,WAAW1C,EAAQoE,IAAKuF,OAAOJ,GAAIN,KAAa,kCAAoCU,OAAOJ,GAAK,qCAAuC1E,EAAI,KAAOA,EAAI,kBAErQ,OADAsE,GAAS5I,KAAKkJ,GACPA,GAEX,IAAInD,GAAS,yDACbA,IAAU4C,EAAOU,KAAK,MACtBtD,GAAU6C,EAASS,KAAK,MACxBtD,GAAU,cACVrC,SAASC,cAAc,WAAWC,aAAa,QAAS,iBACxDF,SAASC,cAAc,WAAW2F,UAAYvD,EAYlD9G,OAAOwJ,iBAAiB,OAAQhF","file":"resources/js/app.min.js","sourcesContent":["/* global window, document, console, GlslCanvas */\n/* \nAuthor: Brett Camper (@professorlemeza)\nURL: https://github.com/tangrams/tangram/blob/master/src/utils/media_capture.js\n*/\n\n(function () {\n    'use strict';\n\n    function CaptureService() {}\n\n    CaptureService.prototype = {\n        set: set,\n        snapshot: snapshot,\n        snapshotRender: snapshotRender,\n        record: record,\n        stop: stop,\n    };\n\n    function set(canvas) {\n        var service = this;\n        service.canvas = canvas;\n    }\n\n    var mimeTypes = [\n        'video/webm\\;codecs=h264',\n        'video/webm\\;codecs=vp8',\n        'video/webm\\;codecs=daala',\n        'video/webm',\n        'audio/webm\\;codecs=opus',\n        'audio/webm',\n        'video/mpeg',\n    ];\n\n    function getOptions() {\n        var options = {\n            videoBitsPerSecond: 2500000,\n            audioBitsPerSecond: 128000,\n            mimeType: 'video/webm',\n            extension: '.webm',\n        };\n        // MediaRecorder.isTypeSupported(mimeTypes[0])\n        return options;\n    }\n\n    function record() {\n        var service = this;\n        if (typeof window.MediaRecorder !== 'function' || !service.canvas || typeof service.canvas.captureStream !== 'function') {\n            console.log('warn: Video capture (Canvas.captureStream and/or MediaRecorder APIs) not supported by browser');\n            return false;\n        } else if (service.capture) {\n            console.log('warn: Video capture already in progress, call Scene.stopVideoCapture() first');\n            return false;\n        }\n        try {\n            var capture = {};\n            var chunks = [];\n            var stream = service.canvas.captureStream();\n            var options = {\n                mimeType: 'video/webm\\;codecs=h264'\n            };\n            var recorder = new MediaRecorder(stream, options);\n            recorder.ondataavailable = function (e) {\n                if (e.data.size > 0) {\n                    chunks.push(e.data);\n                }\n                // Stopped recording? Create the final capture file blob\n                if (capture.resolve) {\n                    var blob = new Blob(chunks, {\n                        type: options.mimeType,\n                    });\n                    if (stream) {\n                        var tracks = stream.getTracks() || [];\n                        tracks.forEach(function (track) {\n                            track.stop();\n                            stream.removeTrack(track);\n                        });\n                    }\n                    stream = null;\n                    service.recorder = null;\n                    service.capture = null;\n                    capture.resolve({\n                        blob: blob,\n                        extension: '.webm',\n                    });\n                }\n            };\n            service.capture = capture;\n            service.recorder = recorder;\n            recorder.start();\n        } catch (e) {\n            service.capture = null;\n            service.recorder = null;\n            console.log('error: Scene video capture failed', e);\n            return false;\n        }\n        return true;\n    }\n\n    function stop() {\n        var service = this;\n        if (!service.capture) {\n            console.log('warn: No scene video capture in progress, call Scene.startVideoCapture() first');\n            return Promise.resolve({});\n        }\n        service.capture.promise = new Promise(function (resolve, reject) {\n            service.capture.resolve = resolve;\n            service.capture.reject = reject;\n        });\n        service.recorder.stop();\n        return service.capture.promise;\n    }\n\n    function snapshot() {\n        var service = this;\n        if (service.queue) {\n            return service.queue.promise;\n        }\n        service.queue = {};\n        service.queue.promise = new Promise(function (resolve, reject) {\n            service.queue.resolve = resolve;\n            service.queue.reject = reject;\n        });\n        return service.queue.promise;\n    }\n\n    function snapshotRender() {\n        var service = this;\n        if (service.queue) {\n            // Get data URL, convert to blob\n            // Strip host/mimetype/etc., convert base64 to binary without UTF-8 mangling\n            // Adapted from: https://gist.github.com/unconed/4370822\n            var url = service.canvas.toDataURL('image/png');\n            var bytes = atob(url.slice(22));\n            var buffer = new Uint8Array(bytes.length);\n            for (var i = 0; i < bytes.length; ++i) {\n                buffer[i] = bytes.charCodeAt(i);\n            }\n            var blob = new Blob([buffer], {\n                type: 'image/png',\n            });\n            service.queue.resolve({\n                blob: blob,\n                extension: '.png',\n            });\n            service.queue = null;\n        }\n    }\n\n    window.CaptureService = CaptureService;\n}());\n/* global window, document, console */\n\n(function () {\n    'use strict';\n\n    function GuiService(callback) {\n        this.callback = callback || function () {\n            console.log('GuiService.onChange');\n        };\n    }\n\n    GuiService.prototype = {\n        load: load,\n    };\n\n    // statics\n\n    function differs(a, b) {\n        return JSON.stringify(a) !== JSON.stringify(b);\n    }\n\n    function copy(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n\n    function loop(obj, params, callback) {\n        var keys = [],\n            p;\n        for (p in params) {\n            keys.push(p);\n        }\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (typeof params[key] == 'number') {\n                p = obj.add(params, key, params[key] * 0.5, params[key] * 2.0);\n                p.onChange(callback);\n            } else if (typeof params[key] == 'object' && Object.keys(params[key]).length > 0) {\n                p = null;\n                var folder = obj.addFolder(key);\n                loop(folder, params[key]);\n            } else {\n                p = obj.add(params, key);\n                p.onChange(callback);\n            }\n        }\n    }\n\n    // publics\n\n    function load(params) {\n        var service = this;\n        var gui = service.gui;\n        var locals = service.locals;\n        var changed = differs(params, locals);\n        if (gui && differs) {\n            gui.destroy();\n            gui = null;\n        }\n        if (!gui) {\n            gui = new dat.GUI();\n            gui.closed = true;\n        }\n        if (changed) {\n            locals = copy(params);\n            loop(gui, locals, service.callback);\n        }\n        service.gui = gui;\n        service.locals = locals;\n    }\n\n    window.GuiService = GuiService;\n\n}());\n/* global window, document, console, GlslCanvas, CaptureService, Stats, dat */\n\n(function () {\n    'use strict';\n\n    function onLoad() {\n        var stats, statsdom;\n\n        var content = document.querySelector('.content');\n        var canvas = document.querySelector('.shader');\n        var buttons = {\n            pause: document.querySelector('.btn-pause'),\n            record: document.querySelector('.btn-record'),\n            stats: document.querySelector('.btn-stats'),\n            create: document.querySelector('.btn-create'),\n        };\n        var flags = {\n            toggle: false,\n            record: false,\n            stats: false,\n        };\n\n        resize(true);\n\n        var glsl = new GlslCanvas(canvas, {\n            premultipliedAlpha: false,\n            preserveDrawingBuffer: true,\n            backgroundColor: 'rgba(1,1,1,1)'\n        });\n        glsl.on('error', onGlslError);\n\n        var service = new CaptureService();\n        service.set(canvas);\n\n        glsl.on('render', function () {\n            service.snapshotRender();\n        });\n\n        load();\n\n        function load() {\n            document.querySelector('.errors').setAttribute('class', 'errors');\n            document.querySelector('.welcome').setAttribute('class', (options.uri ? 'welcome' : 'welcome active'));\n            var o = window.options;\n            o.vertex = o.vertex.trim().length > 0 ? o.vertex : null;\n            o.fragment = o.fragment.trim().length > 0 ? o.fragment : null;\n            glsl.load(o.fragment, o.vertex);\n            for (var u in o.uniforms) {\n                glsl.setUniform(u, o.uniforms[u]);\n            }\n            for (var t in o.textures) {\n                glsl.setUniform('u_texture_' + t, o.textures[t]);\n            }\n            document.querySelector('body').setAttribute('class', (o.fragment || o.vertex ? 'ready' : 'empty'));\n        }\n\n        function resize(init) {\n            var w = content.offsetWidth;\n            var h = content.offsetHeight;\n            canvas.style.width = w + 'px';\n            canvas.style.height = h + 'px';\n            if (init) {\n                canvas.width = w;\n                canvas.height = h;\n            } else {\n                glsl.resize();\n            }\n        }\n\n        function snapshot() {\n            glsl.forceRender = true;\n            glsl.render();\n            return service.snapshot();\n        }\n\n        function record() {\n            glsl.forceRender = true;\n            glsl.render();\n            if (service.record()) {\n                // flags.record = true;\n            }\n        }\n\n        function stop() {\n            service.stop().then(function (video) {\n                // console.log('service.stop');\n                // var filename = options.uri.path.split('/').pop().replace('.glsl', '');\n                // console.log('filename', filename);\n                var url = URL.createObjectURL(video.blob);\n                var link = document.createElement('a');\n                link.href = url;\n                link.download = 'shader' + video.extension;\n                link.click();\n                setTimeout(function () {\n                    window.URL.revokeObjectURL(output);\n                }, 100);\n            });\n        }\n\n        function togglePause() {\n            flags.pause = !flags.pause;\n            // console.log('pause', flags.pause);\n            if (glsl.paused) {\n                if (glsl.timePause) {\n                    glsl.timePrev = new Date();\n                    glsl.timeLoad += (glsl.timePrev - glsl.timePause);\n                }\n                glsl.play();\n                buttons.pause.querySelector('i').setAttribute('class', 'icon-pause');\n            } else {\n                glsl.pause();\n                glsl.timePause = new Date();\n                buttons.pause.querySelector('i').setAttribute('class', 'icon-play');\n            }\n        }\n\n        function toggleRecord() {\n            flags.record = !flags.record;\n            // console.log('record', flags.record);\n            if (flags.record) {\n                buttons.record.setAttribute('class', 'btn btn-record active');\n                buttons.record.querySelector('i').setAttribute('class', 'icon-stop');\n                record();\n            } else {\n                buttons.record.setAttribute('class', 'btn btn-record');\n                buttons.record.querySelector('i').setAttribute('class', 'icon-record');\n                stop();\n            }\n        }\n\n        function toggleStats() {\n            flags.stats = !flags.stats;\n\n            function statsTick() {\n                stats.update();\n                if (flags.stats) {\n                    requestAnimationFrame(statsTick);\n                }\n            }\n            if (flags.stats) {\n                if (!statsdom) {\n                    stats = new Stats();\n                    stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n                    statsdom = stats.dom;\n                    statsdom.style.cssText = 'position:fixed;top:0;right:0;cursor:pointer;opacity:0.9;z-index:10000';\n                    document.body.appendChild(stats.dom);\n                } else {\n                    statsdom.style.visibility = 'visible';\n                }\n                requestAnimationFrame(statsTick);\n                buttons.stats.setAttribute('class', 'btn btn-stats active');\n            } else {\n                if (statsdom) {\n                    statsdom.style.visibility = 'hidden';\n                }\n                buttons.stats.setAttribute('class', 'btn btn-stats');\n            }\n        }\n\n        function createShader(e) {\n            // console.log('createShader', e);\n            window.parent.postMessage({\n                command: \"did-click-link\",\n                data: 'command:glsl-canvas.createShader?' + JSON.stringify([options.uri]),\n            }, \"file://\");\n        }\n\n        function onMessage(event) {\n            window.options = JSON.parse(event.data);\n            // console.log('onMessage', window.options);\n            // event.source.postMessage('message', event.origin);\n            load();\n        }\n\n        var ri;\n\n        function onResize() {\n            if (ri) {\n                clearTimeout(ri);\n            }\n            ri = setTimeout(resize, 50);\n        }\n\n        document.addEventListener(\"dblclick\", togglePause);\n        buttons.pause.addEventListener('mousedown', togglePause);\n        buttons.record.addEventListener('mousedown', toggleRecord);\n        buttons.stats.addEventListener('mousedown', toggleStats);\n        buttons.create.addEventListener('click', createShader);\n        window.addEventListener(\"message\", onMessage, false);\n        window.addEventListener('resize', onResize);\n        resize();\n    }\n\n    function onGlslError(message) {\n        // console.log('onGlslError.error', message.error);\n        var options = window.options;\n        var errors = [],\n            warnings = [];\n        message.error.replace(/ERROR: \\d+:(\\d+): \\'(.+)\\' : (.+)/g, function (m, l, v, t) {\n            var message = 'ERROR (' + v + ') ' + t;\n            var li = '<li><a class=\"error\" unselectable href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">ERROR line ' + Number(l) + '</span> <span class=\"value\" title=\"' + v + '\">' + v + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            errors.push(li);\n            return li;\n        });\n        message.error.replace(/WARNING: \\d+:(\\d+): \\'(.*\\n*|.*|\\n*)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"warning\" unselectable href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">WARN line ' + Number(l) + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            warnings.push(li);\n            return li;\n        });\n        var output = '<div class=\"errors-content\"><p>glslCanvas error</p><ul>';\n        output += errors.join('\\n');\n        output += warnings.join('\\n');\n        output += '</ul></div>';\n        document.querySelector('.errors').setAttribute('class', 'errors active');\n        document.querySelector('.errors').innerHTML = output;\n        /*\n        if (errors.length) {\n            // document.querySelectorAll('.error')[0].click();\n            var data = document.querySelectorAll('.error')[0].getAttribute('href').split('revealGlslLine').join('showDiagnostic');\n            window.parent.postMessage({\n                command: \"did-click-link\",\n                data: data,\n            }, \"file://\");\n        }\n        */\n    }\n    window.addEventListener('load', onLoad);\n}());"],"sourceRoot":"/source/"}