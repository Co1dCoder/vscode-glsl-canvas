!function(){"use strict";function e(){}e.prototype={set:function(e){this.canvas=e},snapshot:function(){var e=this;if(e.queue)return e.queue.promise;return e.queue={},e.queue.promise=new Promise(function(t,r){e.queue.resolve=t,e.queue.reject=r}),e.queue.promise},snapshotRender:function(){var e=this;if(e.queue){for(var t=e.canvas.toDataURL("image/png"),r=atob(t.slice(22)),n=new Uint8Array(r.length),o=0;o<r.length;++o)n[o]=r.charCodeAt(o);var s=new Blob([n],{type:"image/png"});e.queue.resolve({blob:s,extension:".png"}),e.queue=null}},record:function(){var e=this;{if("function"!=typeof window.MediaRecorder||!e.canvas||"function"!=typeof e.canvas.captureStream)return console.log("warn: Video capture (Canvas.captureStream and/or MediaRecorder APIs) not supported by browser"),!1;if(e.capture)return console.log("warn: Video capture already in progress, call Scene.stopVideoCapture() first"),!1}try{var t={},r=[],n=e.canvas.captureStream(),o={mimeType:"video/webm;codecs=h264"},s=new MediaRecorder(n,o);s.ondataavailable=function(s){if(s.data.size>0&&r.push(s.data),t.resolve){var a=new Blob(r,{type:o.mimeType});if(n){var i=n.getTracks()||[];i.forEach(function(e){e.stop(),n.removeTrack(e)})}n=null,e.recorder=null,e.capture=null,t.resolve({blob:a,extension:".webm"})}},e.capture=t,e.recorder=s,s.start()}catch(t){return e.capture=null,e.recorder=null,console.log("error: Scene video capture failed",t),!1}return!0},stop:function(){var e=this;if(!e.capture)return console.log("warn: No scene video capture in progress, call Scene.startVideoCapture() first"),Promise.resolve({});return e.capture.promise=new Promise(function(t,r){e.capture.resolve=t,e.capture.reject=r}),e.recorder.stop(),e.capture.promise}};window.CaptureService=e}(),function(){"use strict";function e(e){this.callback=e||function(){console.log("GuiService.onChange")}}function t(e,t){return JSON.stringify(e)!==JSON.stringify(t)}e.prototype={load:function(e){var r=this,n=r.gui,o=r.locals,s=t(e,o);n&&t&&(n.destroy(),n=null);n||((n=new dat.GUI).closed=!0);s&&(a=e,o=JSON.parse(JSON.stringify(a)),function e(t,r,n){var o,s=[];for(o in r)s.push(o);for(var a=0;a<s.length;a++){var i=s[a];if("number"==typeof r[i])(o=t.add(r,i,.5*r[i],2*r[i])).onChange(n);else if("object"==typeof r[i]&&Object.keys(r[i]).length>0){o=null;var c=t.addFolder(i);e(c,r[i])}else(o=t.add(r,i)).onChange(n)}}(n,o,r.callback));var a;r.gui=n,r.locals=o}},window.GuiService=e}(),function(){"use strict";function e(e){var t=window.options,r=[],n=[];e.error.replace(/ERROR: \d+:(\d+): \'(.+)\' : (.+)/g,function(e,n,o,s){var a="ERROR ("+o+") "+s,i='<li><a class="error" unselectable href="'+encodeURI("command:glsl-canvas.revealGlslLine?"+JSON.stringify([t.uri,Number(n),a]))+'"><span class="line">ERROR line '+Number(n)+'</span> <span class="value" title="'+o+'">'+o+'</span> <span class="text" title="'+s+'">'+s+"</span></a></li>";return r.push(i),i}),e.error.replace(/WARNING: \d+:(\d+): \'(.*\n*|.*|\n*)\' : (.+)/g,function(r,o,s,a){var i='<li><a class="warning" unselectable href="'+encodeURI("command:glsl-canvas.revealGlslLine?"+JSON.stringify([t.uri,Number(o),e]))+'"><span class="line">WARN line '+Number(o)+'</span> <span class="text" title="'+a+'">'+a+"</span></a></li>";return n.push(i),i});var o='<div class="errors-content"><p>glslCanvas error</p><ul>';o+=r.join("\n"),o+=n.join("\n"),o+="</ul></div>",document.querySelector(".errors").setAttribute("class","errors active"),document.querySelector(".errors").innerHTML=o}window.addEventListener("load",function(){var t,r,n=document.querySelector(".content"),o=document.querySelector(".shader"),s={pause:document.querySelector(".btn-pause"),record:document.querySelector(".btn-record"),stats:document.querySelector(".btn-stats"),create:document.querySelector(".btn-create")},a={toggle:!1,record:!1,stats:!1};d(!0);var i=new GlslCanvas(o,{premultipliedAlpha:!1,preserveDrawingBuffer:!0,backgroundColor:"rgba(1,1,1,1)"});i.on("error",e);var c,u=new CaptureService;function l(){document.querySelector(".errors").setAttribute("class","errors"),document.querySelector(".welcome").setAttribute("class",options.uri?"welcome":"welcome active");var e=window.options;for(var t in e.vertex=e.vertex.trim().length>0?e.vertex:null,e.fragment=e.fragment.trim().length>0?e.fragment:null,i.load(e.fragment,e.vertex),e.uniforms)i.setUniform(t,e.uniforms[t]);for(var r in e.textures)i.setUniform("u_texture_"+r,e.textures[r]);document.querySelector("body").setAttribute("class",e.fragment||e.vertex?"ready":"empty")}function d(e){var t=n.offsetWidth,r=n.offsetHeight;o.style.width=t+"px",o.style.height=r+"px",e?(o.width=t,o.height=r):i.resize()}function p(){a.pause=!a.pause,i.paused?(i.timePause&&(i.timePrev=new Date,i.timeLoad+=i.timePrev-i.timePause),i.play(),s.pause.querySelector("i").setAttribute("class","icon-pause")):(i.pause(),i.timePause=new Date,s.pause.querySelector("i").setAttribute("class","icon-play"))}u.set(o),i.on("render",function(){u.snapshotRender()}),l(),document.addEventListener("dblclick",p),s.pause.addEventListener("mousedown",p),s.record.addEventListener("mousedown",function(){a.record=!a.record,a.record?(s.record.setAttribute("class","btn btn-record active"),s.record.querySelector("i").setAttribute("class","icon-stop"),i.forceRender=!0,i.render(),u.record()):(s.record.setAttribute("class","btn btn-record"),s.record.querySelector("i").setAttribute("class","icon-record"),u.stop().then(function(e){var t=URL.createObjectURL(e.blob),r=document.createElement("a");r.href=t,r.download="shader"+e.extension,r.click(),setTimeout(function(){window.URL.revokeObjectURL(output)},100)}))}),s.stats.addEventListener("mousedown",function(){a.stats=!a.stats,a.stats?(r?r.style.visibility="visible":((t=new Stats).showPanel(0),(r=t.dom).style.cssText="position:fixed;top:0;right:0;cursor:pointer;opacity:0.9;z-index:10000",document.body.appendChild(t.dom)),requestAnimationFrame(function e(){t.update(),a.stats&&requestAnimationFrame(e)}),s.stats.setAttribute("class","btn btn-stats active")):(r&&(r.style.visibility="hidden"),s.stats.setAttribute("class","btn btn-stats"))}),s.create.addEventListener("click",function(e){window.parent.postMessage({command:"did-click-link",data:"command:glsl-canvas.createShader?"+JSON.stringify([options.uri])},"file://")}),window.addEventListener("message",function(e){window.options=JSON.parse(e.data),l()},!1),window.addEventListener("resize",function(){c&&clearTimeout(c),c=setTimeout(d,50)}),d()})}();
//# sourceMappingURL=app.min.js.map
