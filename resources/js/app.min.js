!function(){"use strict";function e(){}function t(e){this.canvas=e}function r(){var e=this;if("function"!=typeof window.MediaRecorder||!e.canvas||"function"!=typeof e.canvas.captureStream)return console.log("warn: Video capture (Canvas.captureStream and/or MediaRecorder APIs) not supported by browser"),!1;if(e.capture)return console.log("warn: Video capture already in progress, call Scene.stopVideoCapture() first"),!1;try{var t={},r=[],n=e.canvas.captureStream(),o={mimeType:"video/webm;codecs=h264"},s=new MediaRecorder(n,o);s.ondataavailable=function(s){if(s.data.size>0&&r.push(s.data),t.resolve){var a=new Blob(r,{type:o.mimeType});if(n){(n.getTracks()||[]).forEach(function(e){e.stop(),n.removeTrack(e)})}n=null,e.recorder=null,e.capture=null,t.resolve({blob:a,extension:".webm"})}},e.capture=t,e.recorder=s,s.start()}catch(t){return e.capture=null,e.recorder=null,console.log("error: Scene video capture failed",t),!1}return!0}function n(){var e=this;return e.capture?(e.capture.promise=new Promise(function(t,r){e.capture.resolve=t,e.capture.reject=r}),e.recorder.stop(),e.capture.promise):(console.log("warn: No scene video capture in progress, call Scene.startVideoCapture() first"),Promise.resolve({}))}function o(){var e=this;return e.queue?e.queue.promise:(e.queue={},e.queue.promise=new Promise(function(t,r){e.queue.resolve=t,e.queue.reject=r}),e.queue.promise)}function s(){var e=this;if(e.queue){for(var t=e.canvas.toDataURL("image/png"),r=atob(t.slice(22)),n=new Uint8Array(r.length),o=0;o<r.length;++o)n[o]=r.charCodeAt(o);var s=new Blob([n],{type:"image/png"});e.queue.resolve({blob:s,extension:".png"}),e.queue=null}}e.prototype={set:t,snapshot:o,snapshotRender:s,record:r,stop:n};window.CaptureService=e}(),function(){"use strict";function e(e){this.closed=!0,this.hidden=!0,this.callback=e||function(){console.log("GuiService.onChange")},this.pool={}}function t(e,t){return JSON.stringify(e)!==JSON.stringify(t)}function r(e){return JSON.parse(JSON.stringify(e))}function n(e,t){function n(e,t){for(var r in e)t.hasOwnProperty(r)&&("number"==typeof e[r]?e[r]=t[r]:"object"==typeof e[r]&&Object.keys(e[r]).length>0&&n(e[r],t[r]))}return e&&(e=r(e),n(e,t)),e}function o(e,t,r){var n,s=[];for(n in t)s.push(n);for(var a=0;a<s.length;a++){var i=s[a];if("number"==typeof t[i])n=e.add(t,i,.5*t[i],2*t[i]),n.onChange(r);else if("object"==typeof t[i]&&Object.keys(t[i]).length>0){n=null;var c=e.addFolder(i);o(c,t[i],r)}else n=e.add(t,i),n.onChange(r)}}function s(e){var s=this,a=s.gui,i=s.locals,c=t(e,i);if(a&&c&&(s.closed=a.closed,a.destroy(),a=null),a||(a=new dat.GUI,a.closed=s.closed,s.gui=a,s.hidden?s.hide():s.show()),c){i=r(e),s.locals=i;var u=n(e,s.pool);s.pool=u,o(a,u,s.callback),s.callback()}}function a(){var e=this;e.gui.domElement.style.display="none",e.hidden=!0}function i(){var e=this,t=e.locals;if(Object.keys(t).length){e.gui.domElement.style.display=""}e.hidden=!1}function c(){return this.pool}e.prototype={load:s,hide:a,show:i,getParams:c},window.GuiService=e}(),function(){"use strict";function e(){function e(){document.querySelector(".errors").setAttribute("class","errors"),document.querySelector(".welcome").setAttribute("class",options.uri?"welcome":"welcome active");var e=window.options;e.vertex=e.vertex.trim().length>0?e.vertex:null,e.fragment=e.fragment.trim().length>0?e.fragment:null,b.load(e.fragment,e.vertex),y.load(e.uniforms);for(var t in e.textures)b.setUniform("u_texture_"+t,e.textures[t]);document.querySelector("body").setAttribute("class",e.fragment||e.vertex?"ready":"empty")}function r(e){var t=f.offsetWidth,r=f.offsetHeight;m.style.width=t+"px",m.style.height=r+"px",e?(m.width=t,m.height=r):b.resize()}function n(){b.forceRender=!0,b.render(),g.record()}function o(){g.stop().then(function(e){var t=URL.createObjectURL(e.blob),r=document.createElement("a");r.href=t,r.download="shader"+e.extension,r.click(),setTimeout(function(){window.URL.revokeObjectURL(output)},100)})}function s(){h.pause=!h.pause,b.paused?(b.timePause&&(b.timePrev=new Date,b.timeLoad+=b.timePrev-b.timePause),b.play(),v.pause.querySelector("i").setAttribute("class","icon-pause")):(b.pause(),b.timePause=new Date,v.pause.querySelector("i").setAttribute("class","icon-play"))}function a(){h.record=!h.record,h.record?(v.record.setAttribute("class","btn btn-record active"),v.record.querySelector("i").setAttribute("class","icon-stop"),n()):(v.record.setAttribute("class","btn btn-record"),v.record.querySelector("i").setAttribute("class","icon-record"),o())}function i(){function e(){d.update(),h.stats&&requestAnimationFrame(e)}h.stats=!h.stats,h.stats?(p?p.style.visibility="visible":(d=new Stats,d.showPanel(0),p=d.dom,document.body.appendChild(d.dom)),requestAnimationFrame(e),y.show(),v.stats.setAttribute("class","btn btn-stats active")):(p&&(p.style.visibility="hidden"),y.hide(),v.stats.setAttribute("class","btn btn-stats"))}function c(e){window.parent.postMessage({command:"did-click-link",data:"command:glsl-canvas.createShader?"+JSON.stringify([options.uri])},"file://")}function u(t){window.options=JSON.parse(t.data),e()}function l(){w&&clearTimeout(w),w=setTimeout(r,50)}var d,p,f=document.querySelector(".content"),m=document.querySelector(".shader"),v={pause:document.querySelector(".btn-pause"),record:document.querySelector(".btn-record"),stats:document.querySelector(".btn-stats"),create:document.querySelector(".btn-create")},h={toggle:!1,record:!1,stats:!1};r(!0);var b=new GlslCanvas(m,{premultipliedAlpha:!1,preserveDrawingBuffer:!0,backgroundColor:"rgba(1,1,1,1)"});b.on("error",t);var g=new CaptureService;g.set(m),b.on("render",function(){g.snapshotRender()});var y=new GuiService(function(){var e=y.getParams();for(var t in e)b.setUniform(t,e[t])});e();var w;document.addEventListener("dblclick",s),v.pause.addEventListener("mousedown",s),v.record.addEventListener("mousedown",a),v.stats.addEventListener("mousedown",i),v.create.addEventListener("click",c),window.addEventListener("message",u,!1),window.addEventListener("resize",l),r()}function t(e){var t=window.options,r=[],n=[];e.error.replace(/ERROR: \d+:(\d+): \'(.+)\' : (.+)/g,function(e,n,o,s){var a="ERROR ("+o+") "+s,i='<li><a class="error" unselectable href="'+encodeURI("command:glsl-canvas.revealGlslLine?"+JSON.stringify([t.uri,Number(n),a]))+'"><span class="line">ERROR line '+Number(n)+'</span> <span class="value" title="'+o+'">'+o+'</span> <span class="text" title="'+s+'">'+s+"</span></a></li>";return r.push(i),i}),e.error.replace(/WARNING: \d+:(\d+): \'(.*\n*|.*|\n*)\' : (.+)/g,function(r,o,s,a){var i='<li><a class="warning" unselectable href="'+encodeURI("command:glsl-canvas.revealGlslLine?"+JSON.stringify([t.uri,Number(o),e]))+'"><span class="line">WARN line '+Number(o)+'</span> <span class="text" title="'+a+'">'+a+"</span></a></li>";return n.push(i),i});var o='<div class="errors-content"><p>glslCanvas error</p><ul>';o+=r.join("\n"),o+=n.join("\n"),o+="</ul></div>",document.querySelector(".errors").setAttribute("class","errors active"),document.querySelector(".errors").innerHTML=o}window.addEventListener("load",e)}();
//# sourceMappingURL=app.min.js.map
