!function(){"use strict";function e(){}function t(e){this.canvas=e}function r(){var e=this;if("function"!=typeof window.MediaRecorder||!e.canvas||"function"!=typeof e.canvas.captureStream)return console.log("warn: Video capture (Canvas.captureStream and/or MediaRecorder APIs) not supported by browser"),!1;if(e.capture)return console.log("warn: Video capture already in progress, call Scene.stopVideoCapture() first"),!1;try{var t={},r=[],n=e.canvas.captureStream(),o={mimeType:"video/webm"},a=new MediaRecorder(n,o);a.ondataavailable=function(a){if(a.data.size>0&&r.push(a.data),t.resolve){var i=new Blob(r,{type:o.mimeType});if(n){(n.getTracks()||[]).forEach(function(e){e.stop(),n.removeTrack(e)})}n=null,e.recorder=null,e.capture=null,t.resolve({blob:i,extension:".webm"})}},e.capture=t,e.recorder=a,a.start()}catch(t){return e.capture=null,e.recorder=null,console.log("error: Scene video capture failed",t),!1}return!0}function n(){var e=this;return e.capture?(e.capture.promise=new Promise(function(t,r){e.capture.resolve=t,e.capture.reject=r}),e.recorder.stop(),e.capture.promise):(console.log("warn: No scene video capture in progress, call Scene.startVideoCapture() first"),Promise.resolve({}))}function o(){var e=this;return e.queue?e.queue.promise:(e.queue={},e.queue.promise=new Promise(function(t,r){e.queue.resolve=t,e.queue.reject=r}),e.queue.promise)}function a(){var e=this;if(e.queue){for(var t=e.canvas.toDataURL("image/png"),r=atob(t.slice(22)),n=new Uint8Array(r.length),o=0;o<r.length;++o)n[o]=r.charCodeAt(o);var a=new Blob([n],{type:"image/png"});e.queue.resolve({blob:a,extension:".png"}),e.queue=null}}e.prototype={set:t,snapshot:o,snapshotRender:a,record:r,stop:n},window.CaptureService=e}(),function(){"use strict";var e=function(){function e(e){var t={2:["x","y"],3:["x","y","z"],4:["r","g","b","a"]},r=t[e.length],n={};return e.filter(function(e,t){n[r[t]]=e}),n}function t(e,t){var r={};return e.filter(function(e,n){r[t+n]=e}),r}function r(e){return function(t){return e[t]}}function n(r){var n={};for(var o in r){var a=r[o];if(Array.isArray(a))if(a.length>1)switch(typeof a[0]){case"number":a.length<5&&(n[o]=e(a));break;case"boolean":n[o]=t(a,"bool_");break;case"string":n[o]=t(a,"texture_");break;case"object":n[o]=t(a,"struct_")}else a.length&&(n[o]=a[0]);else void 0!==a&&null!==a&&(n[o]=a)}return n}function o(e){var t={};for(var n in e){var o=e[n];switch(typeof o){case"function":break;case"number":case"boolean":case"string":t[n]=o;break;default:var a=Object.keys(o);t[n]=a.map(r(o))}}return t}return{set:n,get:o}}(),t=function(){function t(e){this.closed=!0,this.hidden=!0,this.callback=e||function(){console.log("GuiService.onChange")},this.pool={}}function r(e,t){return JSON.stringify(e)!==JSON.stringify(t)}function n(e){return JSON.parse(JSON.stringify(e))}function o(e,t){function r(e,t){for(var n in e)t.hasOwnProperty(n)&&("number"==typeof e[n]?e[n]=t[n]:"object"==typeof e[n]&&Object.keys(e[n]).length>0&&r(e[n],t[n]))}return e&&(e=n(e),r(e,t)),e}function a(e,t,r){var n,o=[];for(n in t)o.push(n);o.filter(function(o){var i=t[o];if("number"==typeof i)n=e.add(t,o,0,1),n.onChange(r);else if("object"==typeof i&&Object.keys(i).length>0){n=null;var s=e.addFolder(o);a(s,i,r)}else n=e.add(t,o),n.onChange(r)})}function i(e,t,r){function n(e,t){e.__controllers.filter(function(e){if("number"==typeof e.initialValue&&"number"==typeof e.__min&&"number"==typeof e.__max){var r=e.__min+(e.__max-e.__min)*Math.random();t[e.property]=r,e.updateDisplay()}});for(var r in e.__folders)n(e.__folders[r],t[r])}n(e,t),r()}function s(t){var s=this,c=s.gui,u=s.locals,l=r(t,u);if(c&&l&&(s.closed=c.closed,c.destroy(),c=null),c||(c=new dat.GUI,c.closed=s.closed,s.gui=c,s.hidden?s.hide():s.show()),l){u=n(t),s.locals=u;var d=e.set(t);d=o(d,s.pool),s.pool=d;var f=function(){s.callback(d)};a(c,d,f),d.randomize=function(){i(c,d,f)},c.add(d,"randomize")}}function c(){var e=this;e.gui.domElement.style.display="none",e.hidden=!0}function u(){var e=this,t=e.locals;if(Object.keys(t).length){e.gui.domElement.style.display=""}e.hidden=!1}function l(){var t=this,r=t.pool;return e.get(r)}return t.prototype={load:s,hide:c,show:u,uniforms:l},t}();window.GuiService=t}(),function(){"use strict";function e(){function e(){document.querySelector(".errors").setAttribute("class","errors"),document.querySelector(".welcome").setAttribute("class",options.uri?"welcome":"welcome active");var e=window.options;e.vertex=e.vertex.trim().length>0?e.vertex:null,e.fragment=e.fragment.trim().length>0?e.fragment:null,h.load(e.fragment,e.vertex);for(var t in e.textures)h.setUniform("u_texture_"+t,e.textures[t]);g.load(e.uniforms),h.setUniforms(g.uniforms()),document.querySelector("body").setAttribute("class",e.fragment||e.vertex?"ready":"empty")}function r(e){var t=p.offsetWidth,r=p.offsetHeight;m.style.width=t+"px",m.style.height=r+"px",e?(m.width=t,m.height=r):h.resize()}function n(){h.forceRender=!0,h.render(),y.record()}function o(){y.stop().then(function(e){var t=URL.createObjectURL(e.blob),r=document.createElement("a");r.href=t,r.download="shader"+e.extension,r.click(),setTimeout(function(){window.URL.revokeObjectURL(output)},100)})}function a(){b.pause=!b.pause,h.paused?(h.timePause&&(h.timePrev=new Date,h.timeLoad+=h.timePrev-h.timePause),h.play(),v.pause.querySelector("i").setAttribute("class","icon-pause")):(h.pause(),h.timePause=new Date,v.pause.querySelector("i").setAttribute("class","icon-play"))}function i(){b.record=!b.record,b.record?(v.record.setAttribute("class","btn btn-record active"),v.record.querySelector("i").setAttribute("class","icon-stop"),n()):(v.record.setAttribute("class","btn btn-record"),v.record.querySelector("i").setAttribute("class","icon-record"),o())}function s(){function e(){d.update(),b.stats&&requestAnimationFrame(e)}b.stats=!b.stats,b.stats?(f?f.style.visibility="visible":(d=new Stats,d.showPanel(0),f=d.dom,document.body.appendChild(d.dom)),requestAnimationFrame(e),g.show(),v.stats.setAttribute("class","btn btn-stats active")):(f&&(f.style.visibility="hidden"),g.hide(),v.stats.setAttribute("class","btn btn-stats"))}function c(e){window.parent.postMessage({command:"did-click-link",data:"command:glsl-canvas.createShader?"+JSON.stringify([options.uri])},"file://")}function u(t){window.options=JSON.parse(t.data),e()}function l(){w&&clearTimeout(w),w=setTimeout(r,50)}var d,f,p=document.querySelector(".content"),m=document.querySelector(".shader"),v={pause:document.querySelector(".btn-pause"),record:document.querySelector(".btn-record"),stats:document.querySelector(".btn-stats"),create:document.querySelector(".btn-create")},b={toggle:!1,record:!1,stats:!1};r(!0);var h=new GlslCanvas(m,{premultipliedAlpha:!1,preserveDrawingBuffer:!0,backgroundColor:"rgba(1,1,1,1)"});h.on("error",t);var y=new CaptureService;y.set(m),h.on("render",function(){y.snapshotRender()});var g=new GuiService(function(e){var t=g.uniforms();h.setUniforms(t)});e();var w;m.addEventListener("dblclick",a),v.pause.addEventListener("mousedown",a),v.record.addEventListener("mousedown",i),v.stats.addEventListener("mousedown",s),v.create.addEventListener("click",c),window.addEventListener("message",u,!1),window.addEventListener("resize",l),r()}function t(e){var t=window.options,r=[],n=[];e.error.replace(/ERROR: \d+:(\d+): \'(.+)\' : (.+)/g,function(e,n,o,a){var i="ERROR ("+o+") "+a,s='<li><a class="error" unselectable href="'+encodeURI("command:glsl-canvas.revealGlslLine?"+JSON.stringify([t.uri,Number(n),i]))+'"><span class="line">ERROR line '+Number(n)+'</span> <span class="value" title="'+o+'">'+o+'</span> <span class="text" title="'+a+'">'+a+"</span></a></li>";return r.push(s),s}),e.error.replace(/WARNING: \d+:(\d+): \'(.*\n*|.*|\n*)\' : (.+)/g,function(r,o,a,i){var s='<li><a class="warning" unselectable href="'+encodeURI("command:glsl-canvas.revealGlslLine?"+JSON.stringify([t.uri,Number(o),e]))+'"><span class="line">WARN line '+Number(o)+'</span> <span class="text" title="'+i+'">'+i+"</span></a></li>";return n.push(s),s});var o='<div class="errors-content"><p>glslCanvas error</p><ul>';o+=r.join("\n"),o+=n.join("\n"),o+="</ul></div>",document.querySelector(".errors").setAttribute("class","errors active"),document.querySelector(".errors").innerHTML=o}window.addEventListener("load",e)}();
//# sourceMappingURL=app.min.js.map
