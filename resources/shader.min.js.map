{"version":3,"sources":["resources/shader.js"],"names":["onLoad","load","document","querySelector","setAttribute","options","uri","o","window","vertex","trim","length","fragment","glsl","u","uniforms","setUniform","t","textures","onResize","w","content","offsetWidth","h","offsetHeight","canvas","style","width","height","togglePause","flags","pause","paused","timePause","timePrev","Date","timeLoad","play","buttons","toggleRecord","record","toggleStats","statsTick","stats","update","requestAnimationFrame","statsdom","visibility","Stats","showPanel","dom","cssText","body","appendChild","createShader","e","console","log","parent","postMessage","command","data","JSON","stringify","onMessage","event","parse","create","toggle","GlslCanvas","on","onGlslError","addEventListener","message","errors","warnings","error","replace","m","l","v","li","Number","encodeURI","push","output","join","innerHTML","querySelectorAll","click"],"mappings":"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","file":"resources/shader.min.js","sourcesContent":["/* global window, document, console, GlslCanvas */\n\n(function () {\n    'use strict';\n\n    function onLoad() {\n        var o = 1;\n\n        var content = document.querySelector('.content');\n        var canvas = document.querySelector('.shader');\n        var buttons = {\n            pause: document.querySelector('.btn-pause'),\n            record: document.querySelector('.btn-record'),\n            stats: document.querySelector('.btn-stats'),\n            create: document.querySelector('.btn-create'),\n        };\n        var flags = {\n            toggle: false,\n            record: false,\n            stats: false,\n        };\n\n        onResize();\n\n        var glsl = new GlslCanvas(canvas);\n        glsl.on('error', onGlslError);\n\n        load();\n\n        function load() {\n            document.querySelector('.errors').setAttribute('class', 'errors');\n            document.querySelector('.welcome').setAttribute('class', (options.uri ? 'welcome' : 'welcome active'));\n            var o = window.options;\n            o.vertex = o.vertex.trim().length > 0 ? o.vertex : null;\n            o.fragment = o.fragment.trim().length > 0 ? o.fragment : null;\n            glsl.load(o.fragment, o.vertex);\n            for (var u in o.uniforms) {\n                glsl.setUniform(u, o.uniforms[u]);\n            }\n            for (var t in o.textures) {\n                glsl.setUniform('u_texture_' + t, o.textures[t]);\n            }\n            document.querySelector('body').setAttribute('class', (o.fragment || o.vertex ? 'ready' : 'empty'));\n        }\n\n        function onResize() {\n            var w = content.offsetWidth + o;\n            var h = content.offsetHeight + o;\n            canvas.style.width = w + 'px';\n            canvas.style.height = h + 'px';\n            canvas.width = w;\n            canvas.height = h;\n            o = 0;\n        }\n\n        function togglePause() {\n            flags.pause = !flags.pause;\n            // console.log('pause', flags.pause);\n            if (glsl.paused) {\n                if (glsl.timePause) {\n                    glsl.timePrev = new Date();\n                    glsl.timeLoad += (glsl.timePrev - glsl.timePause);\n                }\n                glsl.play();\n                buttons.pause.querySelector('i').setAttribute('class', 'icon-pause');\n            } else {\n                glsl.pause();\n                glsl.timePause = new Date();\n                buttons.pause.querySelector('i').setAttribute('class', 'icon-play');\n            }\n        }\n\n        function toggleRecord() {\n            flags.record = !flags.record;\n            // console.log('record', flags.record);\n            if (flags.record) {\n                buttons.record.querySelector('i').setAttribute('class', 'icon-stop');\n            } else {\n                buttons.record.querySelector('i').setAttribute('class', 'icon-record');\n            }\n        }\n\n        var stats, statsdom;\n\n        function toggleStats() {\n            flags.stats = !flags.stats;\n\n            function statsTick() {\n                stats.update();\n                if (flags.stats) {\n                    requestAnimationFrame(statsTick);\n                }\n            }\n            if (flags.stats) {\n                if (!statsdom) {\n                    stats = new Stats();\n                    stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n                    statsdom = stats.dom;\n                    statsdom.style.cssText = 'position:fixed;top:0;right:0;cursor:pointer;opacity:0.9;z-index:10000';\n                    document.body.appendChild(stats.dom);\n                } else {\n                    statsdom.style.visibility = 'visible';\n                }\n                requestAnimationFrame(statsTick);\n                buttons.stats.setAttribute('class', 'btn active');\n            } else {\n                if (statsdom) {\n                    statsdom.style.visibility = 'hidden';\n                }\n                buttons.stats.setAttribute('class', 'btn');\n            }\n        }\n\n        function createShader(e) {\n            console.log('createShader', e);\n            window.parent.postMessage({\n                command: \"did-click-link\",\n                data: 'command:glsl-canvas.createShader?' + JSON.stringify([options.uri]),\n            }, \"file://\");\n        }\n\n        function onMessage(event) {\n            window.options = JSON.parse(event.data);\n            // console.log('onMessage', window.options);\n            // event.source.postMessage('message', event.origin);\n            load();\n        }\n\n        document.addEventListener(\"dblclick\", togglePause);\n        buttons.pause.addEventListener('mousedown', togglePause);\n        buttons.record.addEventListener('mousedown', toggleRecord);\n        buttons.stats.addEventListener('mousedown', toggleStats);\n        buttons.create.addEventListener('click', createShader);\n        window.addEventListener(\"message\", onMessage, false);\n        window.addEventListener('resize', onResize);\n        onResize();\n    }\n\n    function onGlslError(message) {\n        // console.log('onGlslError.error', message.error);\n        var options = window.options;\n        var errors = [],\n            warnings = [];\n        message.error.replace(/ERROR: \\d+:(\\d+): \\'(.+)\\' : (.+)/g, function (m, l, v, t) {\n            var message = 'ERROR (' + v + ') ' + t;\n            var li = '<li><a class=\"error\" unselectable data-line=\"' + Number(l) + '\" href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">ERROR line ' + Number(l) + '</span> <span class=\"value\" title=\"' + v + '\">' + v + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            errors.push(li);\n            return li;\n        });\n        message.error.replace(/WARNING: \\d+:(\\d+): \\'(.*\\n*|.*|\\n*)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"warning\" unselectable data-line=\"' + Number(l) + '\" href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([options.uri, Number(l), message])) + '\"><span class=\"line\">WARN line ' + Number(l) + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            warnings.push(li);\n            return li;\n        });\n        var output = '<div class=\"errors-content\"><h4>glslCanvas error</h4><ul>';\n        output += errors.join('\\n');\n        output += warnings.join('\\n');\n        output += '</ul></div>';\n        document.querySelector('.errors').setAttribute('class', 'errors active');\n        document.querySelector('.errors').innerHTML = output;\n        if (errors.length) {\n            document.querySelectorAll('.error')[0].click();\n        }\n    }\n    window.addEventListener('load', onLoad);\n}());"],"sourceRoot":"/source/"}