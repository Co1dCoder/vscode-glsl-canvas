{"version":3,"sources":["resources/shader.js"],"names":["onGlslError","message","errors","warnings","error","replace","m","l","v","t","li","Number","encodeURI","JSON","stringify","window","command","push","output","join","document","getElementById","innerHTML","addEventListener","o","fragment","vertex","content","canvas","onResize","glsl","GlslCanvas","w","offsetWidth","h","offsetHeight","style","width","height","on","p","trim","length","load","uniforms","setUniform","textures","stats","Stats","showPanel","body","appendChild","dom","requestAnimationFrame","animate","update","paused","timePause","timePrev","Date","timeLoad","play","pause"],"mappings":"CAEC,WACG,aA0EA,SAASA,EAAYC,GAEjB,IAAIC,KACAC,KACJF,EAAQG,MAAMC,QAAQ,qCAAsC,SAAUC,EAAGC,EAAGC,EAAGC,GAC3E,IAAIC,EAAK,gDAAkDC,OAAOJ,GAAK,WAAaK,UAAU,sCAAwCC,KAAKC,WAAWC,OAAOC,QAASL,OAAOJ,MAAQ,mCAAqCI,OAAOJ,GAAK,sCAAwCC,EAAI,KAAOA,EAAI,qCAAuCC,EAAI,KAAOA,EAAI,mBAEnV,OADAP,EAAOe,KAAKP,GACLA,IAEXT,EAAQG,MAAMC,QAAQ,iDAAkD,SAAUC,EAAGC,EAAGC,EAAGC,GACvF,IAAIC,EAAK,kDAAoDC,OAAOJ,GAAK,WAAaK,UAAU,sCAAwCC,KAAKC,WAAWC,OAAOC,QAASL,OAAOJ,MAAQ,kCAAoCI,OAAOJ,GAAK,qCAAuCE,EAAI,KAAOA,EAAI,mBAE7R,OADAN,EAASc,KAAKP,GACPA,IAEX,IAAIQ,EAAS,gDACbA,GAAUhB,EAAOiB,KAAK,MACtBD,GAAUf,EAASgB,KAAK,MACxBD,GAAU,cACVE,SAASC,eAAe,WAAWC,UAAYJ,EAYnDH,OAAOQ,iBAAiB,OAtGxB,WACI,IAAIC,EAAI,EAEJC,EAAWL,SAASC,eAAe,YAAYC,UAC/CI,EAASN,SAASC,eAAe,UAAUC,UAC3CK,EAAUP,SAASC,eAAe,WAClCO,EAASR,SAASC,eAAe,UAErCQ,IAEA,IAAIC,EAAO,IAAIC,WAAWH,GAkC1B,SAASC,IACL,IAAIG,EAAIL,EAAQM,YAAcT,EAC1BU,EAAIP,EAAQQ,aAAeX,EAC/BI,EAAOQ,MAAMC,MAAQL,EAAI,KACzBJ,EAAOQ,MAAME,OAASJ,EAAI,KAC1BN,EAAOS,MAAQL,EACfJ,EAAOU,OAASJ,EAChBV,EAAI,EAxCRM,EAAKS,GAAG,QAASvC,GAIjB,WAMI,IAAK,IAAIwC,KALLd,EAAOe,OAAOC,OAAS,EACvBZ,EAAKa,KAAKlB,EAAUC,GACbD,GACPK,EAAKa,KAAKlB,GAEAV,OAAO6B,SACjBd,EAAKe,WAAWL,EAAGzB,OAAO6B,SAASJ,IAEvC,IAAK,IAAIA,KAAKzB,OAAO+B,SACjBhB,EAAKe,WAAW,aAAeL,EAAGzB,OAAO+B,SAASN,IAGtD,IAAIO,EAAQ,IAAIC,MAChBD,EAAME,UAAU,GAChB7B,SAAS8B,KAAKC,YAAYJ,EAAMK,KAWhCC,sBATA,SAASC,IACLP,EAAMQ,SACNF,sBAAsBC,KArB9BX,GAsDAf,EAAOL,iBAAiB,YAbxB,WACQO,EAAK0B,QACD1B,EAAK2B,YACL3B,EAAK4B,SAAW,IAAIC,KACpB7B,EAAK8B,UAAa9B,EAAK4B,SAAW5B,EAAK2B,WAE3C3B,EAAK+B,SAEL/B,EAAKgC,QACLhC,EAAK2B,UAAY,IAAIE,QAK7B5C,OAAOQ,iBAAiB,SAAUM,GAClCA,MAxER","file":"shader.min.js","sourcesContent":["/* global window, document, console, GlslCanvas */\n\n(function () {\n    'use strict';\n\n    function onLoad() {\n        var o = 1; // important\n\n        var fragment = document.getElementById('fragment').innerHTML;\n        var vertex = document.getElementById('vertex').innerHTML;\n        var content = document.getElementById('content');\n        var canvas = document.getElementById('shader');\n\n        onResize();\n\n        var glsl = new GlslCanvas(canvas);\n        glsl.on('error', onGlslError);\n\n        load();\n\n        function load() {\n            if (vertex.trim().length > 0) {\n                glsl.load(fragment, vertex);\n            } else if (fragment) {\n                glsl.load(fragment);\n            }\n            for (var p in window.uniforms) {\n                glsl.setUniform(p, window.uniforms[p]);\n            }\n            for (var p in window.textures) {\n                glsl.setUniform('u_texture_' + p, window.textures[p]);\n            }\n\n            var stats = new Stats();\n            stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n            document.body.appendChild(stats.dom);\n\n            function animate() {\n                stats.update();\n                requestAnimationFrame(animate);\n                // stats.begin();\n                // monitored code goes here\n                // stats.end();\n                // requestAnimationFrame(animate);\n                // stats.begin();\n            }\n            requestAnimationFrame(animate);\n        }\n\n        function onResize() {\n            var w = content.offsetWidth + o;\n            var h = content.offsetHeight + o;\n            canvas.style.width = w + 'px';\n            canvas.style.height = h + 'px';\n            canvas.width = w;\n            canvas.height = h;\n            o = 0;\n        }\n\n        function onDown() {\n            if (glsl.paused) {\n                if (glsl.timePause) {\n                    glsl.timePrev = new Date();\n                    glsl.timeLoad += (glsl.timePrev - glsl.timePause);\n                }\n                glsl.play();\n            } else {\n                glsl.pause();\n                glsl.timePause = new Date();\n            }\n        }\n\n        canvas.addEventListener('mousedown', onDown);\n        window.addEventListener('resize', onResize);\n        onResize();\n    }\n\n    function onGlslError(message) {\n        // console.log('onGlslError.error', message.error);\n        var errors = [],\n            warnings = [];\n        message.error.replace(/ERROR: \\d+:(\\d+): \\'(.+)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"error\" unselectable data-line=\"' + Number(l) + '\" href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([window.command, Number(l)])) + '\"><span class=\"line\">ERROR line ' + Number(l) + '</span> <span class=\"value\" title=\"' + v + '\">' + v + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            errors.push(li);\n            return li;\n        });\n        message.error.replace(/WARNING: \\d+:(\\d+): \\'(.*\\n*|.*|\\n*)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"warning\" unselectable data-line=\"' + Number(l) + '\" href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([window.command, Number(l)])) + '\"><span class=\"line\">WARN line ' + Number(l) + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            warnings.push(li);\n            return li;\n        });\n        var output = '<div id=\"error\"><h4>glslCanvas error</h4><ul>';\n        output += errors.join('\\n');\n        output += warnings.join('\\n');\n        output += '</ul></div>';\n        document.getElementById('content').innerHTML = output;\n    }\n\n    /*\n    function onConsoleError() {\n        console.log('onConsoleError', arguments);\n    }\n\n    console.error = onConsoleError;\n    */\n\n    // window.onload = onLoad;\n    window.addEventListener('load', onLoad);\n\n}());"]}