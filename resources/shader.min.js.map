{"version":3,"sources":["resources/shader.js"],"names":["onLoad","onResize","w","content","offsetWidth","o","h","offsetHeight","canvas","style","width","height","togglePause","flags","pause","console","log","glsl","paused","timePause","timePrev","Date","timeLoad","play","tools","querySelector","setAttribute","toggleRecord","record","toggleStats","statsTick","stats","update","requestAnimationFrame","statsdom","visibility","Stats","showPanel","dom","cssText","document","body","appendChild","fragment","getElementById","innerHTML","vertex","toggle","GlslCanvas","on","onGlslError","trim","length","load","p","window","uniforms","setUniform","textures","addEventListener","message","errors","warnings","error","replace","m","l","v","t","li","Number","encodeURI","JSON","stringify","command","push","output","join"],"mappings":"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","file":"resources/shader.min.js","sourcesContent":["/* global window, document, console, GlslCanvas */\n\n(function () {\n    'use strict';\n\n    function onLoad() {\n        var o = 1; // important\n\n        var fragment = document.getElementById('fragment').innerHTML;\n        var vertex = document.getElementById('vertex').innerHTML;\n        var content = document.getElementById('content');\n        var canvas = document.getElementById('shader');\n        var tools = {\n            pause: document.querySelector('#pause'),\n            record: document.querySelector('#record'),\n            stats: document.querySelector('#stats'),\n        };\n        var flags = {\n            toggle: false,\n            record: false,\n            stats: false,\n        };\n\n        onResize();\n\n        var glsl = new GlslCanvas(canvas);\n        glsl.on('error', onGlslError);\n\n        load();\n\n        function load() {\n            if (vertex.trim().length > 0) {\n                glsl.load(fragment, vertex);\n            } else if (fragment) {\n                glsl.load(fragment);\n            }\n            for (var p in window.uniforms) {\n                glsl.setUniform(p, window.uniforms[p]);\n            }\n            for (var p in window.textures) {\n                glsl.setUniform('u_texture_' + p, window.textures[p]);\n            }\n        }\n\n        function onResize() {\n            var w = content.offsetWidth + o;\n            var h = content.offsetHeight + o;\n            canvas.style.width = w + 'px';\n            canvas.style.height = h + 'px';\n            canvas.width = w;\n            canvas.height = h;\n            o = 0;\n        }\n\n        function togglePause() {\n            flags.pause = !flags.pause;\n            console.log('pause', flags.pause);\n            if (glsl.paused) {\n                if (glsl.timePause) {\n                    glsl.timePrev = new Date();\n                    glsl.timeLoad += (glsl.timePrev - glsl.timePause);\n                }\n                glsl.play();\n                tools.pause.querySelector('i').setAttribute('class', 'icon-pause');\n            } else {\n                glsl.pause();\n                glsl.timePause = new Date();\n                tools.pause.querySelector('i').setAttribute('class', 'icon-play');\n            }\n        }\n\n        function toggleRecord() {\n            flags.record = !flags.record;\n            console.log('record', flags.record);\n            if (flags.record) {\n                tools.record.querySelector('i').setAttribute('class', 'icon-stop');\n            } else {\n                tools.record.querySelector('i').setAttribute('class', 'icon-record');\n            }\n        }\n\n        var stats, statsdom;\n\n        function toggleStats() {\n            flags.stats = !flags.stats;\n\n            function statsTick() {\n                stats.update();\n                // stats.begin();\n                // monitored code goes here\n                // stats.end();\n                if (flags.stats) {\n                    requestAnimationFrame(statsTick);\n                }\n                // stats.begin();\n            }\n            if (flags.stats) {\n                if (!statsdom) {\n                    stats = new Stats();\n                    stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n                    statsdom = stats.dom;\n                    statsdom.style.cssText = 'position:fixed;top:0;right:0;cursor:pointer;opacity:0.9;z-index:10000';\n                    document.body.appendChild(stats.dom);\n                } else {\n                    statsdom.style.visibility = 'visible';\n                }\n                requestAnimationFrame(statsTick);\n                tools.stats.setAttribute('class', 'btn active');\n            } else {\n                if (statsdom) {\n                    statsdom.style.visibility = 'hidden';\n                }\n                tools.stats.setAttribute('class', 'btn');\n            }\n        }\n\n        tools.pause.addEventListener('mousedown', togglePause);\n        tools.record.addEventListener('mousedown', toggleRecord);\n        tools.stats.addEventListener('mousedown', toggleStats);\n        document.addEventListener(\"dblclick\", togglePause);\n        window.addEventListener('resize', onResize);\n        onResize();\n    }\n\n    function onGlslError(message) {\n        // console.log('onGlslError.error', message.error);\n        var errors = [],\n            warnings = [];\n        message.error.replace(/ERROR: \\d+:(\\d+): \\'(.+)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"error\" unselectable data-line=\"' + Number(l) + '\" href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([window.command, Number(l)])) + '\"><span class=\"line\">ERROR line ' + Number(l) + '</span> <span class=\"value\" title=\"' + v + '\">' + v + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            errors.push(li);\n            return li;\n        });\n        message.error.replace(/WARNING: \\d+:(\\d+): \\'(.*\\n*|.*|\\n*)\\' : (.+)/g, function (m, l, v, t) {\n            var li = '<li><a class=\"warning\" unselectable data-line=\"' + Number(l) + '\" href=\"' + encodeURI('command:glsl-canvas.revealGlslLine?' + JSON.stringify([window.command, Number(l)])) + '\"><span class=\"line\">WARN line ' + Number(l) + '</span> <span class=\"text\" title=\"' + t + '\">' + t + '</span></a></li>';\n            warnings.push(li);\n            return li;\n        });\n        var output = '<div id=\"error\"><h4>glslCanvas error</h4><ul>';\n        output += errors.join('\\n');\n        output += warnings.join('\\n');\n        output += '</ul></div>';\n        document.getElementById('content').innerHTML = output;\n    }\n\n    /*\n    function onConsoleError() {\n        console.log('onConsoleError', arguments);\n    }\n\n    console.error = onConsoleError;\n    */\n\n    // window.onload = onLoad;\n    window.addEventListener('load', onLoad);\n\n}());"],"sourceRoot":"/source/"}